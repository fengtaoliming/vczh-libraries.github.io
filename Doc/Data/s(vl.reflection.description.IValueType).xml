<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.IValueType">
    <ClassDecl Access="Public" Name="IValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType" OverloadKey="::vl::reflection::description::IValueType" ClassType="Class">
      <Children>
        <TemplateDecl Access="Public" Tags="x86, Windows">
          <TypeParameters>
            <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::IValueType::T" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::T" />
          </TypeParameters>
          <Specialization />
          <Element>
            <ClassDecl Access="Public" Name="TypedBox" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1" ClassType="Class">
              <Children>
                <TemplateDecl Access="Private" Tags="x86, Windows">
                  <TypeParameters>
                    <TypeParameterDecl Access="Public" Name="U" Tags="x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::U" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,AcceptAlways&lt;vint, decltype(&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare)&gt;::Type)::U" />
                  </TypeParameters>
                  <Specialization />
                  <Element>
                    <FuncDecl Access="Public" Name="ComparePrimitiveInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,AcceptAlways&lt;vint, decltype(&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare)&gt;::Type)" Virtual="Static" Function="Function">
                      <Type>
                        <FunctionTypeDecl CallingConvention="Default" Const="False">
                          <ReturnType>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue::CompareResult" Name="CompareResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IBoxedValue::CompareResult@s:vl.reflection.description.IBoxedValue" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </ReturnType>
                          <Parameters>
                            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal::a" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,AcceptAlways&lt;vint, decltype(&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare)&gt;::Type)::a" Static="False">
                              <Type>
                                <DecorateTypeDecl Decoration="LeftRef">
                                  <Element>
                                    <DecorateTypeDecl Decoration="Const">
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueType::TypedBox::U" Name="U">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,AcceptAlways&lt;vint, decltype(&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare)&gt;::Type)::U@s:vl.reflection.description.IValueType" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </DecorateTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Type>
                            </VarDecl>
                            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal::b" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,AcceptAlways&lt;vint, decltype(&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare)&gt;::Type)::b" Static="False">
                              <Type>
                                <DecorateTypeDecl Decoration="LeftRef">
                                  <Element>
                                    <DecorateTypeDecl Decoration="Const">
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueType::TypedBox::U" Name="U">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,AcceptAlways&lt;vint, decltype(&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare)&gt;::Type)::U@s:vl.reflection.description.IValueType" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </DecorateTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Type>
                            </VarDecl>
                            <VarDecl Access="Public" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal::" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,AcceptAlways&lt;vint, decltype(&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare)&gt;::Type)::" Static="False">
                              <Type>
                                <SubTypeDecl ReferencingNameKey="::vl::AcceptAlways::Type" Name="Type">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::AcceptAlways`2::Type@s:vl.AcceptAlways`2" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <GenericTypeDecl>
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::AcceptAlways" Name="AcceptAlways">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::AcceptAlways`2@s:vl.AcceptAlways`2" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                      <TypeArguments>
                                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::vint@s:vl.vint" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                        <DeclTypeDecl Expression="&amp; TypedValueSerializerProvider &lt; U &gt; : : Compare" />
                                      </TypeArguments>
                                    </GenericTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Type>
                            </VarDecl>
                          </Parameters>
                        </FunctionTypeDecl>
                      </Type>
                    </FuncDecl>
                  </Element>
                </TemplateDecl>
                <TemplateDecl Access="Private" Tags="x86, Windows">
                  <TypeParameters>
                    <TypeParameterDecl Access="Public" Name="U" Tags="x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::U" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,double)::U" />
                  </TypeParameters>
                  <Specialization />
                  <Element>
                    <FuncDecl Access="Public" Name="ComparePrimitiveInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,double)" Virtual="Static" Function="Function">
                      <Type>
                        <FunctionTypeDecl CallingConvention="Default" Const="False">
                          <ReturnType>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue::CompareResult" Name="CompareResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IBoxedValue::CompareResult@s:vl.reflection.description.IBoxedValue" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </ReturnType>
                          <Parameters>
                            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal::a" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,double)::a" Static="False">
                              <Type>
                                <DecorateTypeDecl Decoration="LeftRef">
                                  <Element>
                                    <DecorateTypeDecl Decoration="Const">
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueType::TypedBox::U" Name="U">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,double)::U@s:vl.reflection.description.IValueType" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </DecorateTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Type>
                            </VarDecl>
                            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal::b" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,double)::b" Static="False">
                              <Type>
                                <DecorateTypeDecl Decoration="LeftRef">
                                  <Element>
                                    <DecorateTypeDecl Decoration="Const">
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueType::TypedBox::U" Name="U">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,double)::U@s:vl.reflection.description.IValueType" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </DecorateTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Type>
                            </VarDecl>
                            <VarDecl Access="Public" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitiveInternal::" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitiveInternal`1(&amp; const U,&amp; const U,double)::" Static="False">
                              <Type>
                                <RefTypeDecl Name="double" />
                              </Type>
                            </VarDecl>
                          </Parameters>
                        </FunctionTypeDecl>
                      </Type>
                    </FuncDecl>
                  </Element>
                </TemplateDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::value" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject::SafeAggregationCast`1(&amp; * T)::T@s:vl.reflection.DescriptableObject" />
                        <Key Value="::vl::reflection::DescriptableObject::SafeAggregationCast`1()::T@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <FuncDecl Access="Public" Name="TypedBox" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::TypedBox" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::TypedBox()" Virtual="Normal" Function="Constructor">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl Name="void" />
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="TypedBox" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::TypedBox" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::TypedBox(&amp; const T)" Virtual="Normal" Function="Constructor">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl Name="void" />
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Name="_value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::TypedBox::_value" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::TypedBox(&amp; const T)::_value" Static="False">
                          <Type>
                            <DecorateTypeDecl Decoration="LeftRef">
                              <Element>
                                <DecorateTypeDecl Decoration="Const">
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::DescriptableObject::SafeAggregationCast`1(&amp; * T)::T@s:vl.reflection.DescriptableObject" />
                                        <Key Value="::vl::reflection::DescriptableObject::SafeAggregationCast`1()::T@s:vl.reflection.DescriptableObject" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="Copy" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::Copy" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::Copy()" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="ComparePrimitive" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitive" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitive(Ptr&lt;IBoxedValue&gt;)" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue::CompareResult" Name="CompareResult">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IBoxedValue::CompareResult@s:vl.reflection.description.IBoxedValue" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Name="boxedValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::TypedBox::ComparePrimitive::boxedValue" OverloadKey="::vl::reflection::description::IValueType::TypedBox`1::ComparePrimitive(Ptr&lt;IBoxedValue&gt;)::boxedValue" Static="False">
                          <Type>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
              </Children>
              <BaseTypes>
                <BaseTypeDecl Access="Public" Tags="x86, Windows">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </BaseTypeDecl>
              </BaseTypes>
            </ClassDecl>
          </Element>
        </TemplateDecl>
        <FuncDecl Access="Public" Name="CreateDefault" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::CreateDefault" OverloadKey="::vl::reflection::description::IValueType::CreateDefault()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Compare" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::Compare" OverloadKey="::vl::reflection::description::IValueType::Compare(&amp; const Value,&amp; const Value)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue::CompareResult" Name="CompareResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IBoxedValue::CompareResult@s:vl.reflection.description.IBoxedValue" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::Compare::a" OverloadKey="::vl::reflection::description::IValueType::Compare(&amp; const Value,&amp; const Value)::a" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueType::Compare::b" OverloadKey="::vl::reflection::description::IValueType::Compare(&amp; const Value,&amp; const Value)::b" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueType" Name="IValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueType@s:vl.reflection.description.IValueType" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>