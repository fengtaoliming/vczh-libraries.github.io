<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.cppcodegen.GenerateCppFiles(Ptr{WfCppInput},^ analyzer.WfLexicalScopeManager)">
    <FuncDecl Access="Public" Name="GenerateCppFiles" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::cppcodegen::GenerateCppFiles" OverloadKey="::vl::workflow::cppcodegen::GenerateCppFiles(Ptr&lt;WfCppInput&gt;,* analyzer::WfLexicalScopeManager)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::cppcodegen::WfCppOutput" Name="WfCppOutput">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::cppcodegen::WfCppOutput@s:vl.workflow.cppcodegen.WfCppOutput" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::cppcodegen::GenerateCppFiles::input" OverloadKey="::vl::workflow::cppcodegen::GenerateCppFiles(Ptr&lt;WfCppInput&gt;,* analyzer::WfLexicalScopeManager)::input" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::cppcodegen::WfCppInput" Name="WfCppInput">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::cppcodegen::WfCppInput@s:vl.workflow.cppcodegen.WfCppInput" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::cppcodegen::GenerateCppFiles::manager" OverloadKey="::vl::workflow::cppcodegen::GenerateCppFiles(Ptr&lt;WfCppInput&gt;,* analyzer::WfLexicalScopeManager)::manager" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer" Name="analyzer">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer@ns:vl.workflow.analyzer" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>