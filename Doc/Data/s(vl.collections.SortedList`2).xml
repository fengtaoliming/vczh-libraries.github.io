<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.collections.SortedList`2">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;List that keeps everything in order.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;Type of elements.&lt;/typeparam&gt;
  &lt;typeparam name="K"&gt;Type of the key type of elements.&lt;/typeparam&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::T" OverloadKey="::vl::collections::SortedList`2::T" />
        <TypeParameterDecl Access="Public" Name="K" Tags="x86, Windows" NameKey="::vl::collections::K" OverloadKey="::vl::collections::SortedList`2::K" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="SortedList" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList" OverloadKey="::vl::collections::SortedList`2" ClassType="Class">
          <Children>
            <TemplateDecl Access="Protected" Tags="x86, Windows">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get the position of an item in this list.&lt;/summary&gt;
  &lt;typeparam name="Key"&gt;Type of the item to find.&lt;/typeparam&gt;
  &lt;returns&gt;Returns the position. Returns -1 if not exists&lt;/returns&gt;
  &lt;param name="item"&gt;The item to find.&lt;/param&gt;
  &lt;param name="index"&gt;Returns the last index.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <TypeParameters>
                <TypeParameterDecl Access="Public" Name="Key" Tags="x86, Windows" NameKey="::vl::collections::SortedList::Key" OverloadKey="::vl::collections::SortedList`2::IndexOfInternal`1(&amp; const Key,&amp; vint)const::Key" />
              </TypeParameters>
              <Specialization />
              <Element>
                <FuncDecl Access="Public" Name="IndexOfInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::IndexOfInternal" OverloadKey="::vl::collections::SortedList`2::IndexOfInternal`1(&amp; const Key,&amp; vint)const" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="True">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::IndexOfInternal::item" OverloadKey="::vl::collections::SortedList`2::IndexOfInternal`1(&amp; const Key,&amp; vint)const::item" Static="False">
                          <Type>
                            <DecorateTypeDecl Decoration="LeftRef">
                              <Element>
                                <DecorateTypeDecl Decoration="Const">
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::SortedList::Key" Name="Key">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::SortedList`2::IndexOfInternal`1(&amp; const Key,&amp; vint)const::Key@s:vl.collections.SortedList`2" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Type>
                        </VarDecl>
                        <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::IndexOfInternal::index" OverloadKey="::vl::collections::SortedList`2::IndexOfInternal`1(&amp; const Key,&amp; vint)const::index" Static="False">
                          <Type>
                            <DecorateTypeDecl Decoration="LeftRef">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
              </Element>
            </TemplateDecl>
            <FuncDecl Access="Protected" Name="Insert" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Insert" OverloadKey="::vl::collections::SortedList`2::Insert(vint,&amp; const T)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Insert::index" OverloadKey="::vl::collections::SortedList`2::Insert(vint,&amp; const T)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Insert::item" OverloadKey="::vl::collections::SortedList`2::Insert(vint,&amp; const T)::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::SortedList`2::T@s:vl.collections.SortedList`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SortedList" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::SortedList" OverloadKey="::vl::collections::SortedList`2::SortedList()" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create a list.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Contains" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Contains" OverloadKey="::vl::collections::SortedList`2::Contains(&amp; const K)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Test does the list contain an item or not.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the list contains the specified item.&lt;/returns&gt;
  &lt;param name="item"&gt;The item to test.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Contains::item" OverloadKey="::vl::collections::SortedList`2::Contains(&amp; const K)const::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::K" Name="K">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::SortedList`2::K@s:vl.collections.SortedList`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="IndexOf" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::IndexOf" OverloadKey="::vl::collections::SortedList`2::IndexOf(&amp; const K)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get the position of an item in this list.&lt;/summary&gt;
  &lt;returns&gt;Returns the position. Returns -1 if not exists&lt;/returns&gt;
  &lt;param name="item"&gt;The item to find.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::IndexOf::item" OverloadKey="::vl::collections::SortedList`2::IndexOf(&amp; const K)const::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::K" Name="K">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::SortedList`2::K@s:vl.collections.SortedList`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Add" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Add" OverloadKey="::vl::collections::SortedList`2::Add(&amp; const T)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Add an item at a correct position to keep everying in order.&lt;/summary&gt;
  &lt;returns&gt;The index of the added item.&lt;/returns&gt;
  &lt;param name="item"&gt;The item to add.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Add::item" OverloadKey="::vl::collections::SortedList`2::Add(&amp; const T)::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::SortedList`2::T@s:vl.collections.SortedList`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Remove" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Remove" OverloadKey="::vl::collections::SortedList`2::Remove(&amp; const K)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Remove an item.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the item is removed.&lt;/returns&gt;
  &lt;param name="item"&gt;The item to remove.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::SortedList::Remove::item" OverloadKey="::vl::collections::SortedList`2::Remove(&amp; const K)::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::K" Name="K">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::SortedList`2::K@s:vl.collections.SortedList`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::ListBase" Name="ListBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::ListBase`2@s:vl.collections.ListBase`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::SortedList`2::T@s:vl.collections.SortedList`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::K" Name="K">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::SortedList`2::K@s:vl.collections.SortedList`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>