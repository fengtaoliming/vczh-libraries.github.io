<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.analyzing.DefinitionTypeScopePair">
    <ClassDecl Access="Public" Name="DefinitionTypeScopePair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair" ClassType="Struct">
      <Children>
        <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::type" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::type" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionType" Name="ParsingDefinitionType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::definitions::ParsingDefinitionType@s:vl.parsing.definitions.ParsingDefinitionType" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::scope" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::scope" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="DefinitionTypeScopePair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DefinitionTypeScopePair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair(* definitions::ParsingDefinitionType,* ParsingSymbol)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair::_type" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair(* definitions::ParsingDefinitionType,* ParsingSymbol)::_type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionType" Name="ParsingDefinitionType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionType@s:vl.parsing.definitions.ParsingDefinitionType" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair::_scope" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::DefinitionTypeScopePair(* definitions::ParsingDefinitionType,* ParsingSymbol)::_scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Compare" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::Compare" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::Compare(&amp; const DefinitionTypeScopePair)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::Compare::pair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::Compare(&amp; const DefinitionTypeScopePair)const::pair" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator ==" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator ==(&amp; const DefinitionTypeScopePair)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator ==::pair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator ==(&amp; const DefinitionTypeScopePair)const::pair" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator !=" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator !=(&amp; const DefinitionTypeScopePair)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator !=::pair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator !=(&amp; const DefinitionTypeScopePair)const::pair" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &gt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;(&amp; const DefinitionTypeScopePair)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;::pair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;(&amp; const DefinitionTypeScopePair)const::pair" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &gt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;=" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;=(&amp; const DefinitionTypeScopePair)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;=::pair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &gt;=(&amp; const DefinitionTypeScopePair)const::pair" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;(&amp; const DefinitionTypeScopePair)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;::pair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;(&amp; const DefinitionTypeScopePair)const::pair" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &lt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;=" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;=(&amp; const DefinitionTypeScopePair)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pair" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;=::pair" OverloadKey="::vl::parsing::analyzing::DefinitionTypeScopePair::operator &lt;=(&amp; const DefinitionTypeScopePair)const::pair" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>