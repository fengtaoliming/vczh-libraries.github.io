<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.TypeInfoRetriver`1">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping>
        <Map From="::vl::reflection::description::TypeInfoRetriver`1::T" To="::vl::reflection::description::TypeInfoRetriver`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1" DisplayName="TypeInfoRetriver struct" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::TypeFlag" DisplayName="TypeFlag field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::Hint" DisplayName="Hint field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::Decorator" DisplayName="Decorator field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::Type" DisplayName="Type typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::TempValueType" DisplayName="TempValueType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::ResultReferenceType" DisplayName="ResultReferenceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::ResultNonReferenceType" DisplayName="ResultNonReferenceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypeInfoRetriver`1::CreateTypeInfo()" DisplayName="CreateTypeInfo method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>