<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.INativeController">
    <ClassDecl Access="Public" Name="INativeController" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController" OverloadKey="::vl::presentation::INativeController" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Global native system service controller. Use &lt;links&gt;&lt;link cref="::vl::presentation::GetCurrentController()@s:vl.presentation.GetCurrentController()" /&gt;&lt;/links&gt; to access this controller.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="CallbackService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::CallbackService" OverloadKey="::vl::presentation::INativeController::CallbackService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the callback service.
&lt;/summary&gt;
  &lt;returns&gt;The callback service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeCallbackService" Name="INativeCallbackService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeCallbackService@s:vl.presentation.INativeCallbackService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ResourceService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::ResourceService" OverloadKey="::vl::presentation::INativeController::ResourceService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the system resource service.
&lt;/summary&gt;
  &lt;returns&gt;The system resource service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeResourceService" Name="INativeResourceService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeResourceService@s:vl.presentation.INativeResourceService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AsyncService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::AsyncService" OverloadKey="::vl::presentation::INativeController::AsyncService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the asynchronized operation service.
&lt;/summary&gt;
  &lt;returns&gt;The asynchronized operation service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeAsyncService" Name="INativeAsyncService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeAsyncService@s:vl.presentation.INativeAsyncService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ClipboardService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::ClipboardService" OverloadKey="::vl::presentation::INativeController::ClipboardService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the clipboard service.
&lt;/summary&gt;
  &lt;returns&gt;The clipboard service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeClipboardService" Name="INativeClipboardService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeClipboardService@s:vl.presentation.INativeClipboardService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ImageService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::ImageService" OverloadKey="::vl::presentation::INativeController::ImageService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the image service.
&lt;/summary&gt;
  &lt;returns&gt;The image service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeImageService" Name="INativeImageService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeImageService@s:vl.presentation.INativeImageService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ScreenService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::ScreenService" OverloadKey="::vl::presentation::INativeController::ScreenService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the screen information service.
&lt;/summary&gt;
  &lt;returns&gt;The screen information service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeScreenService" Name="INativeScreenService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeScreenService@s:vl.presentation.INativeScreenService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WindowService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::WindowService" OverloadKey="::vl::presentation::INativeController::WindowService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the window service.
&lt;/summary&gt;
  &lt;returns&gt;The window service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowService" Name="INativeWindowService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeWindowService@s:vl.presentation.INativeWindowService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InputService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::InputService" OverloadKey="::vl::presentation::INativeController::InputService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the user input service.
&lt;/summary&gt;
  &lt;returns&gt;The user input service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeInputService" Name="INativeInputService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeInputService@s:vl.presentation.INativeInputService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DialogService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::DialogService" OverloadKey="::vl::presentation::INativeController::DialogService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the dialog service.
&lt;/summary&gt;
  &lt;returns&gt;The user dialog service&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetExecutablePath" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeController::GetExecutablePath" OverloadKey="::vl::presentation::INativeController::GetExecutablePath()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the file path of the current executable.
&lt;/summary&gt;
  &lt;returns&gt;The file path of the current executable.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeController" Name="INativeController">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeController@s:vl.presentation.INativeController" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>