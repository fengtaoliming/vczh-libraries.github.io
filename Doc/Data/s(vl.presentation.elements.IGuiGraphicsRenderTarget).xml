<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.elements.IGuiGraphicsRenderTarget">
    <ClassDecl Access="Public" Name="IGuiGraphicsRenderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
This is the interface for graphics renderer targets.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="StartRendering" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::StartRendering" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::StartRendering()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Notify the target to prepare for rendering.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StopRendering" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::StopRendering" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::StopRendering()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Notify the target to stop rendering.
&lt;/summary&gt;
  &lt;returns&gt;Returns false to recreate render target.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::RenderTargetFailure" Name="RenderTargetFailure">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::RenderTargetFailure@s:vl.presentation.elements.RenderTargetFailure" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PushClipper" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::PushClipper" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::PushClipper(Rect)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Apply a clipper to the render target.
The result clipper is combined by all clippers in the clipper stack maintained by the render target.
&lt;/summary&gt;
  &lt;param name="clipper"&gt;The clipper to push.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="clipper" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::PushClipper::clipper" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::PushClipper(Rect)::clipper" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PopClipper" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::PopClipper" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::PopClipper()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Remove the last pushed clipper from the clipper stack.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetClipper" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::GetClipper" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::GetClipper()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the combined clipper
&lt;/summary&gt;
  &lt;returns&gt;The combined clipper&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsClipperCoverWholeTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::IsClipperCoverWholeTarget" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderTarget::IsClipperCoverWholeTarget()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Test is the combined clipper is as large as the render target.
&lt;/summary&gt;
  &lt;returns&gt;Return true if the combined clipper is as large as the render target.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Interface" Name="Interface">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Interface@s:vl.Interface" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>