<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.GuiGrammarColorizer">
    <ClassDecl Access="Public" Name="GuiGrammarColorizer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Grammar based colorizer.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="FieldDesc" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::FieldDesc" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::FieldDesc">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="FieldContextColors" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::FieldContextColors" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::FieldContextColors">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiGrammarColorizer::FieldDesc" Name="FieldDesc">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiGrammarColorizer::FieldDesc@s:vl.presentation.controls.GuiGrammarColorizer" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="FieldSemanticColors" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::FieldSemanticColors" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::FieldSemanticColors">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiGrammarColorizer::FieldDesc" Name="FieldDesc">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiGrammarColorizer::FieldDesc@s:vl.presentation.controls.GuiGrammarColorizer" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ColorEntry" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorEntry" Name="ColorEntry">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text::ColorEntry@s:vl.presentation.elements.text.ColorEntry" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text" Name="text">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text@ns:vl.presentation.elements.text" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <ClassDecl Access="Public" Name="SemanticColorizeContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SemanticColorizeContext" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SemanticColorizeContext" ClassType="Struct">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Context for doing semantic colorizing.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <VarDecl Access="Public" Name="semanticId" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SemanticColorizeContext::semanticId" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SemanticColorizeContext::semanticId" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Output semantic id that comes from one the argument in the @Semantic attribute.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ParsingTokenContext" Name="ParsingTokenContext">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::ParsingTokenContext@s:vl.presentation.controls.ParsingTokenContext" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <VarDecl Access="Private" Name="colorSettings" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::colorSettings" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::colorSettings" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry" Name="ColorEntry">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry@s:vl.presentation.controls.GuiGrammarColorizer" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="semanticColorMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::semanticColorMap" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::semanticColorMap" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="contextLock" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::contextLock" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::contextLock" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::SpinLock" Name="SpinLock">
              <ReferencingOverloadKeys>
                <Key Value="::vl::SpinLock@s:vl.SpinLock" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::context" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::context" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Private" Name="OnParsingFinishedAsync" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::OnParsingFinishedAsync" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::OnParsingFinishedAsync(&amp; const RepeatingParsingOutput)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::OnParsingFinishedAsync::output" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::OnParsingFinishedAsync(&amp; const RepeatingParsingOutput)::output" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnContextFinishedAsync" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::OnContextFinishedAsync" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::OnContextFinishedAsync(&amp; const RepeatingParsingOutput)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when the node is parsed successfully before restarting colorizing.&lt;/summary&gt;
  &lt;param name="context"&gt;The result of the parsing.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::OnContextFinishedAsync::context" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::OnContextFinishedAsync(&amp; const RepeatingParsingOutput)::context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Attach" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::Attach" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_element" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::Attach::_element" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::_element" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiColorizedTextElement" Name="GuiColorizedTextElement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::GuiColorizedTextElement@s:vl.presentation.elements.GuiColorizedTextElement" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_elementModifyLock" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::Attach::_elementModifyLock" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::_elementModifyLock" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::SpinLock" Name="SpinLock">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::SpinLock@s:vl.SpinLock" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_ownerComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::Attach::_ownerComposition" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::_ownerComposition" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="editVersion" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::Attach::editVersion" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::editVersion" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint" Name="vuint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint@s:vl.vuint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Detach" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::Detach" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::Detach()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="TextEditPreview" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditPreview" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditPreview(&amp; TextEditPreviewStruct)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditPreview::arguments" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditPreview(&amp; TextEditPreviewStruct)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ICommonTextEditCallback::TextEditPreviewStruct" Name="TextEditPreviewStruct">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::ICommonTextEditCallback::TextEditPreviewStruct@s:vl.presentation.controls.ICommonTextEditCallback" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="TextEditNotify" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditNotify" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditNotify(&amp; const TextEditNotifyStruct)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditNotify::arguments" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditNotify(&amp; const TextEditNotifyStruct)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ICommonTextEditCallback::TextEditNotifyStruct" Name="TextEditNotifyStruct">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::ICommonTextEditCallback::TextEditNotifyStruct@s:vl.presentation.controls.ICommonTextEditCallback" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="TextCaretChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextCaretChanged" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextCaretChanged(&amp; const TextCaretChangedStruct)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextCaretChanged::arguments" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextCaretChanged(&amp; const TextCaretChangedStruct)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ICommonTextEditCallback::TextCaretChangedStruct" Name="TextCaretChangedStruct">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::ICommonTextEditCallback::TextCaretChangedStruct@s:vl.presentation.controls.ICommonTextEditCallback" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="TextEditFinished" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditFinished" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditFinished(vuint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="editVersion" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditFinished::editVersion" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::TextEditFinished(vuint)::editVersion" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint" Name="vuint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint@s:vl.vuint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnSemanticColorize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::OnSemanticColorize" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::OnSemanticColorize(&amp; SemanticColorizeContext,&amp; const RepeatingParsingOutput)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when a @SemanticColor attribute in a grammar is activated during colorizing to determine a color for the token. If there is an &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; binded to the &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;, this function can be automatically done.&lt;/summary&gt;
  &lt;param name="context"&gt;Context for doing semantic colorizing.&lt;/param&gt;
  &lt;param name="input"&gt;The corressponding result from the &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::OnSemanticColorize::context" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::OnSemanticColorize(&amp; SemanticColorizeContext,&amp; const RepeatingParsingOutput)::context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiGrammarColorizer::SemanticColorizeContext" Name="SemanticColorizeContext">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiGrammarColorizer::SemanticColorizeContext@s:vl.presentation.controls.GuiGrammarColorizer" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::OnSemanticColorize::input" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::OnSemanticColorize(&amp; SemanticColorizeContext,&amp; const RepeatingParsingOutput)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="EnsureColorizerFinished" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::EnsureColorizerFinished" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::EnsureColorizerFinished()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Call this function in the derived class's destructor when it overrided &lt;links&gt;&lt;link cref="::vl::presentation::controls::GuiGrammarColorizer::OnSemanticColorize(&amp;amp; SemanticColorizeContext,&amp;amp; const RepeatingParsingOutput)@s:vl.presentation.controls.GuiGrammarColorizer" /&gt;&lt;/links&gt;.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiGrammarColorizer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer(Ptr&lt;RepeatingParsingExecutor&gt;)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create the colorizer with a created parsing executor.&lt;/summary&gt;
  &lt;param name="_parsingExecutor"&gt;The parsing executor.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_parsingExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer::_parsingExecutor" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer(Ptr&lt;RepeatingParsingExecutor&gt;)::_parsingExecutor" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiGrammarColorizer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer(Ptr&lt;parsing::tabling::ParsingGeneralParser&gt;,&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create the colorizer with a specified grammar and start rule to create a &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;.&lt;/summary&gt;
  &lt;param name="_grammarParser"&gt;Parser generated from a grammar.&lt;/param&gt;
  &lt;param name="_grammarRule" /&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_grammarParser" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer::_grammarParser" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer(Ptr&lt;parsing::tabling::ParsingGeneralParser&gt;,&amp; const WString)::_grammarParser" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingGeneralParser" Name="ParsingGeneralParser">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingGeneralParser@s:vl.parsing.tabling.ParsingGeneralParser" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_grammarRule" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer::_grammarRule" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GuiGrammarColorizer(Ptr&lt;parsing::tabling::ParsingGeneralParser&gt;,&amp; const WString)::_grammarRule" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiGrammarColorizer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::~GuiGrammarColorizer" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::~GuiGrammarColorizer()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="BeginSetColors" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::BeginSetColors" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::BeginSetColors()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Reset all color settings.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetColorNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GetColorNames" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GetColorNames()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all color names.&lt;/summary&gt;
  &lt;returns&gt;All color names.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GetColor" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GetColor(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the color for a token theme name (@Color or @ContextColor("theme-name") in the grammar).&lt;/summary&gt;
  &lt;returns&gt;The color.&lt;/returns&gt;
  &lt;param name="name"&gt;The token theme name.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry" Name="ColorEntry">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry@s:vl.presentation.controls.GuiGrammarColorizer" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GetColor::name" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GetColor(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor(&amp; const WString,&amp; const ColorEntry)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set a color for a token theme name (@Color or @ContextColor("theme-name") in the grammar).&lt;/summary&gt;
  &lt;param name="name"&gt;The token theme name.&lt;/param&gt;
  &lt;param name="entry"&gt;The color.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor::name" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor(&amp; const WString,&amp; const ColorEntry)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="entry" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor::entry" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor(&amp; const WString,&amp; const ColorEntry)::entry" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry" Name="ColorEntry">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::GuiGrammarColorizer::ColorEntry@s:vl.presentation.controls.GuiGrammarColorizer" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor(&amp; const WString,&amp; const Color)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set a color for a token theme name (@Color or @ContextColor("theme-name") in the grammar).&lt;/summary&gt;
  &lt;param name="name"&gt;The token theme name.&lt;/param&gt;
  &lt;param name="color"&gt;The color.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor::name" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor(&amp; const WString,&amp; const Color)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="color" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor::color" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::SetColor(&amp; const WString,&amp; const Color)::color" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EndSetColors" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::EndSetColors" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::EndSetColors()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Submit all color settings.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ColorizeTokenContextSensitive" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive(vint,* const wchar_t,vint,vint,&amp; vint,&amp; vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="lineIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive::lineIndex" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive(vint,* const wchar_t,vint,vint,&amp; vint,&amp; vint)::lineIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive::text" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive(vint,* const wchar_t,vint,vint,&amp; vint,&amp; vint)::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive::start" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive(vint,* const wchar_t,vint,vint,&amp; vint,&amp; vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive::length" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive(vint,* const wchar_t,vint,vint,&amp; vint,&amp; vint)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="token" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive::token" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive(vint,* const wchar_t,vint,vint,&amp; vint,&amp; vint)::token" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="contextState" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive::contextState" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::ColorizeTokenContextSensitive(vint,* const wchar_t,vint,vint,&amp; vint,&amp; vint)::contextState" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParsingExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiGrammarColorizer::GetParsingExecutor" OverloadKey="::vl::presentation::controls::GuiGrammarColorizer::GetParsingExecutor()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the internal parsing executor.&lt;/summary&gt;
  &lt;returns&gt;The parsing executor.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTextBoxRegexColorizer" Name="GuiTextBoxRegexColorizer">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiTextBoxRegexColorizer@s:vl.presentation.controls.GuiTextBoxRegexColorizer" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Protected" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase" Name="CallbackBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase@s:vl.presentation.controls.RepeatingParsingExecutor" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>