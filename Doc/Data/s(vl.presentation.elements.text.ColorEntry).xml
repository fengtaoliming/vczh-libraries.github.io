<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.elements.text.ColorEntry">
    <ClassDecl Access="Public" Name="ColorEntry" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry" OverloadKey="::vl::presentation::elements::text::ColorEntry" ClassType="Struct">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents color entry in a color table. Use &lt;links&gt;&lt;link cref="::vl::presentation::elements::GuiColorizedTextElement::GetColors()@s:vl.presentation.elements.GuiColorizedTextElement" /&gt;&lt;/links&gt; and &lt;links&gt;&lt;link cref="::vl::presentation::elements::GuiColorizedTextElement::SetColors(&amp;amp; const ColorArray)@s:vl.presentation.elements.GuiColorizedTextElement" /&gt;&lt;/links&gt; to access the color table.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="normal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry::normal" OverloadKey="::vl::presentation::elements::text::ColorEntry::normal" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Colors in normal state.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorItem" Name="ColorItem">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text::ColorItem@s:vl.presentation.elements.text.ColorItem" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="selectedFocused" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry::selectedFocused" OverloadKey="::vl::presentation::elements::text::ColorEntry::selectedFocused" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Colors in focused and selected state.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorItem" Name="ColorItem">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text::ColorItem@s:vl.presentation.elements.text.ColorItem" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="selectedUnfocused" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry::selectedUnfocused" OverloadKey="::vl::presentation::elements::text::ColorEntry::selectedUnfocused" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Colors in not focused and selected state.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorItem" Name="ColorItem">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text::ColorItem@s:vl.presentation.elements.text.ColorItem" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry::operator ==" OverloadKey="::vl::presentation::elements::text::ColorEntry::operator ==(&amp; const ColorEntry)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry::operator ==::value" OverloadKey="::vl::presentation::elements::text::ColorEntry::operator ==(&amp; const ColorEntry)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorEntry" Name="ColorEntry">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements::text::ColorEntry@s:vl.presentation.elements.text.ColorEntry" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry::operator !=" OverloadKey="::vl::presentation::elements::text::ColorEntry::operator !=(&amp; const ColorEntry)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::ColorEntry::operator !=::value" OverloadKey="::vl::presentation::elements::text::ColorEntry::operator !=(&amp; const ColorEntry)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorEntry" Name="ColorEntry">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements::text::ColorEntry@s:vl.presentation.elements.text.ColorEntry" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>