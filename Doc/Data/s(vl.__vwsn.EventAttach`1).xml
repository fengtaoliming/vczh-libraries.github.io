<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.__vwsn.EventAttach`1(&amp; T,EventHelper{T}.Handler)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::__vwsn::T" OverloadKey="::vl::__vwsn::EventAttach`1(&amp; T,EventHelper&lt;T&gt;::Handler)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="EventAttach" Tags="x64, Windows;x86, Windows" NameKey="::vl::__vwsn::EventAttach" OverloadKey="::vl::__vwsn::EventAttach`1(&amp; T,EventHelper&lt;T&gt;::Handler)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="e" Tags="x64, Windows;x86, Windows" NameKey="::vl::__vwsn::EventAttach::e" OverloadKey="::vl::__vwsn::EventAttach`1(&amp; T,EventHelper&lt;T&gt;::Handler)::e" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::__vwsn::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::__vwsn::EventAttach`1(&amp; T,EventHelper&lt;T&gt;::Handler)::T@s:vl.__vwsn.EventAttach`1(&amp; T,EventHelper{T}.Handler)" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="handler" Tags="x64, Windows;x86, Windows" NameKey="::vl::__vwsn::EventAttach::handler" OverloadKey="::vl::__vwsn::EventAttach`1(&amp; T,EventHelper&lt;T&gt;::Handler)::handler" Static="False">
                  <Type>
                    <SubTypeDecl ReferencingNameKey="::vl::__vwsn::EventHelper::Handler" Name="Handler">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::__vwsn::EventHelper`1&lt;Event&lt;function (... TArgs) : void&gt;&gt;::Handler@s:vl.__vwsn.EventHelper`1{Event{function (... TArgs) # void}}" />
                        <Key Value="::vl::__vwsn::EventHelper`1&lt;presentation::compositions::GuiGraphicsEvent&lt;T&gt;&gt;::Handler@s:vl.__vwsn.EventHelper`1{presentation.compositions.GuiGraphicsEvent{T}}" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::__vwsn::EventHelper" Name="EventHelper">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::__vwsn::EventHelper`1@s:vl.__vwsn.EventHelper`1" />
                                <Key Value="::vl::__vwsn::EventHelper`1&lt;Event&lt;function (... TArgs) : void&gt;&gt;@s:vl.__vwsn.EventHelper`1{Event{function (... TArgs) # void}}" />
                                <Key Value="::vl::__vwsn::EventHelper`1&lt;presentation::compositions::GuiGraphicsEvent&lt;T&gt;&gt;@s:vl.__vwsn.EventHelper`1{presentation.compositions.GuiGraphicsEvent{T}}" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::__vwsn::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::__vwsn::EventAttach`1(&amp; T,EventHelper&lt;T&gt;::Handler)::T@s:vl.__vwsn.EventAttach`1(&amp; T,EventHelper{T}.Handler)" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>