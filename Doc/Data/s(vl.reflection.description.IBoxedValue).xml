<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.IBoxedValue">
    <ClassDecl Access="Public" Name="IBoxedValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue" OverloadKey="::vl::reflection::description::IBoxedValue" ClassType="Class">
      <Children>
        <EnumDecl Access="Public" Name="CompareResult" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::CompareResult" OverloadKey="::vl::reflection::description::IBoxedValue::CompareResult" EnumClass="False">
          <Children>
            <EnumItemDecl Access="Public" Name="Smaller" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::CompareResult::Smaller" OverloadKey="::vl::reflection::description::IBoxedValue::CompareResult::Smaller" />
            <EnumItemDecl Access="Public" Name="Greater" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::CompareResult::Greater" OverloadKey="::vl::reflection::description::IBoxedValue::CompareResult::Greater" />
            <EnumItemDecl Access="Public" Name="Equal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::CompareResult::Equal" OverloadKey="::vl::reflection::description::IBoxedValue::CompareResult::Equal" />
            <EnumItemDecl Access="Public" Name="NotComparable" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::CompareResult::NotComparable" OverloadKey="::vl::reflection::description::IBoxedValue::CompareResult::NotComparable" />
          </Children>
        </EnumDecl>
        <FuncDecl Access="Public" Name="Copy" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::Copy" OverloadKey="::vl::reflection::description::IBoxedValue::Copy()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ComparePrimitive" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::ComparePrimitive" OverloadKey="::vl::reflection::description::IBoxedValue::ComparePrimitive(Ptr&lt;IBoxedValue&gt;)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue::CompareResult" Name="CompareResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IBoxedValue::CompareResult@s:vl.reflection.description.IBoxedValue" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="boxedValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IBoxedValue::ComparePrimitive::boxedValue" OverloadKey="::vl::reflection::description::IBoxedValue::ComparePrimitive(Ptr&lt;IBoxedValue&gt;)::boxedValue" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>