<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.CustomEventInfoImpl`2">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TClass" Tags="x86, Windows" NameKey="::vl::reflection::description::TClass" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2::TClass" />
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="CustomEventInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2" ClassType="Class">
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.CustomEventInfoImpl`2{TClass,function (... TArgs) # void}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TClass" Tags="x86, Windows" NameKey="::vl::reflection::description::TClass" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TClass" />
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::reflection::description::TArgs" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TArgs" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TClass" Name="TClass">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TClass@s:vl.reflection.description.CustomEventInfoImpl`2{TClass,function (... TArgs) # void}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Static="False">
              <Type>
                <VariadicArgumentTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TArgs@s:vl.reflection.description.CustomEventInfoImpl`2{TClass,function (... TArgs) # void}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </VariadicArgumentTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="CustomEventInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="eventRef" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::eventRef" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::eventRef" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <ClassMemberTypeDecl>
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Event" Name="Event">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Event`1@s:vl.Event`1" />
                                <Key Value="::vl::Event`1&lt;function (... TArgs) : void&gt;@s:vl.Event`1{function (... TArgs) # void}" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <FunctionTypeDecl CallingConvention="Default" Const="False">
                              <ReturnType>
                                <RefTypeDecl Name="void" />
                              </ReturnType>
                              <Parameters>
                                <VarDecl Access="Public" Static="False">
                                  <Type>
                                    <VariadicArgumentTypeDecl>
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TArgs@s:vl.reflection.description.CustomEventInfoImpl`2{TClass,function (... TArgs) # void}" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </VariadicArgumentTypeDecl>
                                  </Type>
                                </VarDecl>
                              </Parameters>
                            </FunctionTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                      <ClassType>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TClass" Name="TClass">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TClass@s:vl.reflection.description.CustomEventInfoImpl`2{TClass,function (... TArgs) # void}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ClassType>
                    </ClassMemberTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Protected" Name="AttachInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::AttachInternal" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::AttachInternal(* DescriptableObject,* IEventHandler)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::AttachInternal::thisObject" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::AttachInternal(* DescriptableObject,* IEventHandler)::thisObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="eventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::AttachInternal::eventHandler" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::AttachInternal(* DescriptableObject,* IEventHandler)::eventHandler" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="DetachInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::DetachInternal" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::DetachInternal(* DescriptableObject,* IEventHandler)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::DetachInternal::thisObject" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::DetachInternal(* DescriptableObject,* IEventHandler)::thisObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="eventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::DetachInternal::eventHandler" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::DetachInternal(* DescriptableObject,* IEventHandler)::eventHandler" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="InvokeInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::InvokeInternal" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::InvokeInternal(* DescriptableObject,&amp; collections::Array&lt;Value&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::InvokeInternal::thisObject" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::InvokeInternal(* DescriptableObject,&amp; collections::Array&lt;Value&gt;)::thisObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::InvokeInternal::arguments" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::InvokeInternal(* DescriptableObject,&amp; collections::Array&lt;Value&gt;)::arguments" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="GetHandlerTypeInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::GetHandlerTypeInternal" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::GetHandlerTypeInternal()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="CustomEventInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::CustomEventInfoImpl" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::CustomEventInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(Event&lt;function (... TArgs) : void&gt;))" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_ownerTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::CustomEventInfoImpl::_ownerTypeDescriptor" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::CustomEventInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(Event&lt;function (... TArgs) : void&gt;))::_ownerTypeDescriptor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::CustomEventInfoImpl::_name" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::CustomEventInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(Event&lt;function (... TArgs) : void&gt;))::_name" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_eventRef" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::CustomEventInfoImpl::_eventRef" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::CustomEventInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(Event&lt;function (... TArgs) : void&gt;))::_eventRef" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <ClassMemberTypeDecl>
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Event" Name="Event">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Event`1@s:vl.Event`1" />
                                        <Key Value="::vl::Event`1&lt;function (... TArgs) : void&gt;@s:vl.Event`1{function (... TArgs) # void}" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                                      <ReturnType>
                                        <RefTypeDecl Name="void" />
                                      </ReturnType>
                                      <Parameters>
                                        <VarDecl Access="Public" Static="False">
                                          <Type>
                                            <VariadicArgumentTypeDecl>
                                              <Element>
                                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                                                  <ReferencingOverloadKeys>
                                                    <Key Value="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TArgs@s:vl.reflection.description.CustomEventInfoImpl`2{TClass,function (... TArgs) # void}" />
                                                  </ReferencingOverloadKeys>
                                                </RefTypeDecl>
                                              </Element>
                                            </VariadicArgumentTypeDecl>
                                          </Type>
                                        </VarDecl>
                                      </Parameters>
                                    </FunctionTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                              <ClassType>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TClass" Name="TClass">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::TClass@s:vl.reflection.description.CustomEventInfoImpl`2{TClass,function (... TArgs) # void}" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </ClassType>
                            </ClassMemberTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~CustomEventInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::~CustomEventInfoImpl" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::~CustomEventInfoImpl()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetCpp" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomEventInfoImpl::GetCpp" OverloadKey="::vl::reflection::description::CustomEventInfoImpl`2&lt;TClass,function (... TArgs) : void&gt;::GetCpp()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo::ICpp" Name="ICpp">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventInfo::ICpp@s:vl.reflection.description.IEventInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::EventInfoImpl" Name="EventInfoImpl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::EventInfoImpl@s:vl.reflection.description.EventInfoImpl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>