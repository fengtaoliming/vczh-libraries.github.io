<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.internal_helper.GenericArgumentAdder`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::internal_helper::T" OverloadKey="::vl::reflection::description::internal_helper::GenericArgumentAdder`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="GenericArgumentAdder" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::GenericArgumentAdder" OverloadKey="::vl::reflection::description::internal_helper::GenericArgumentAdder`1" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="Add" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::GenericArgumentAdder::Add" OverloadKey="::vl::reflection::description::internal_helper::GenericArgumentAdder`1::Add(Ptr&lt;GenericTypeInfo&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="genericType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::GenericArgumentAdder::Add::genericType" OverloadKey="::vl::reflection::description::internal_helper::GenericArgumentAdder`1::Add(Ptr&lt;GenericTypeInfo&gt;)::genericType" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::GenericTypeInfo" Name="GenericTypeInfo">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::GenericTypeInfo@s:vl.reflection.description.GenericTypeInfo" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>