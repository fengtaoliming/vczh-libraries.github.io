<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.elements.GuiSolidLabelElement">
    <ClassDecl Access="Public" Name="GuiSolidLabelElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Defines an element of a plain text.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="GetElementTypeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetElementTypeName" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetElementTypeName()" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Protected" Name="color" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::color" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::color" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="fontProperties" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::fontProperties" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::fontProperties" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::FontProperties" Name="FontProperties">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::FontProperties@s:vl.presentation.FontProperties" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::text" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::text" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="hAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::hAlignment" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::hAlignment" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="vAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::vAlignment" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::vAlignment" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="wrapLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::wrapLine" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::wrapLine" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ellipse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::ellipse" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::ellipse" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="multiline" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::multiline" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::multiline" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="wrapLineHeightCalculation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::wrapLineHeightCalculation" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::wrapLineHeightCalculation" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GuiSolidLabelElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GuiSolidLabelElement" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GuiSolidLabelElement()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetColor" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetColor()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the text color.
&lt;/summary&gt;
  &lt;returns&gt;The text color.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetColor" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetColor(Color)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the text color.
&lt;/summary&gt;
  &lt;param name="value"&gt;The new text color.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetColor::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetColor(Color)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetFont" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetFont" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetFont()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the text font.
&lt;/summary&gt;
  &lt;returns&gt;The text font.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::FontProperties" Name="FontProperties">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::FontProperties@s:vl.presentation.FontProperties" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetFont" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetFont" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetFont(&amp; const FontProperties)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the text font.
&lt;/summary&gt;
  &lt;param name="value"&gt;The new text font.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetFont::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetFont(&amp; const FontProperties)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::FontProperties" Name="FontProperties">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::FontProperties@s:vl.presentation.FontProperties" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetText" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetText()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the text.
&lt;/summary&gt;
  &lt;returns&gt;The text.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetText" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetText(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the text.
&lt;/summary&gt;
  &lt;param name="value"&gt;The new text.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetText::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetText(&amp; const WString)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetHorizontalAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetHorizontalAlignment" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetHorizontalAlignment()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the horizontal alignment of the text.
&lt;/summary&gt;
  &lt;returns&gt;The horizontal alignment of the text.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetVerticalAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetVerticalAlignment" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetVerticalAlignment()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the vertical alignment of the text.
&lt;/summary&gt;
  &lt;returns&gt;The vertical alignment of the text.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetHorizontalAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetHorizontalAlignment" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetHorizontalAlignment(Alignment)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the horizontal alignment of the text.
&lt;/summary&gt;
  &lt;param name="value"&gt;The new horizontal alignment of the text.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetHorizontalAlignment::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetHorizontalAlignment(Alignment)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetVerticalAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetVerticalAlignment" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetVerticalAlignment(Alignment)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the vertical alignment of the text.
&lt;/summary&gt;
  &lt;param name="value"&gt;The vertical alignment of the text.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetVerticalAlignment::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetVerticalAlignment(Alignment)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetAlignments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetAlignments" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetAlignments(Alignment,Alignment)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set alignments in both directions of the text.
&lt;/summary&gt;
  &lt;param name="horizontal"&gt;The new horizontal alignment of the text.&lt;/param&gt;
  &lt;param name="vertical"&gt;The vertical alignment of the text.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="horizontal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetAlignments::horizontal" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetAlignments(Alignment,Alignment)::horizontal" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="vertical" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetAlignments::vertical" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetAlignments(Alignment,Alignment)::vertical" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetWrapLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetWrapLine" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetWrapLine()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get if line auto-wrapping is enabled for this text.
&lt;/summary&gt;
  &lt;returns&gt;Return true if line auto-wrapping is enabled for this text.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetWrapLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLine" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLine(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set if line auto-wrapping is enabled for this text.
&lt;/summary&gt;
  &lt;param name="value"&gt;True if line auto-wrapping is enabled for this text.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLine::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLine(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetEllipse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetEllipse" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetEllipse()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get if ellipse is enabled for this text. Ellipse will appear when the text is clipped.
&lt;/summary&gt;
  &lt;returns&gt;Return true if ellipse is enabled for this text.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetEllipse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetEllipse" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetEllipse(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set if ellipse is enabled for this text. Ellipse will appear when the text is clipped.
&lt;/summary&gt;
  &lt;param name="value"&gt;True if ellipse is enabled for this text.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetEllipse::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetEllipse(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMultiline" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetMultiline" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetMultiline()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get if multiple lines is enabled for this text.
&lt;/summary&gt;
  &lt;returns&gt;Return true if multiple lines is enabled for this text.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetMultiline" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetMultiline" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetMultiline(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set if multiple lines is enabled for this text.
&lt;/summary&gt;
  &lt;param name="value"&gt;True if multiple lines is enabled for this text.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetMultiline::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetMultiline(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetWrapLineHeightCalculation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::GetWrapLineHeightCalculation" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::GetWrapLineHeightCalculation()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get if the element calculates the min height when wrap line is enabled.
&lt;/summary&gt;
  &lt;returns&gt;Return true if the element calculates the min height when wrap line is enabled.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetWrapLineHeightCalculation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLineHeightCalculation" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLineHeightCalculation(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set if the element calculates the min height when wrap line is enabled.
&lt;/summary&gt;
  &lt;param name="value"&gt;True if the element calculates the min height when wrap line is enabled.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLineHeightCalculation::value" OverloadKey="::vl::presentation::elements::GuiSolidLabelElement::SetWrapLineHeightCalculation(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiElementBase" Name="GuiElementBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::GuiElementBase`1@s:vl.presentation.elements.GuiElementBase`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiSolidLabelElement" Name="GuiSolidLabelElement">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::GuiSolidLabelElement@s:vl.presentation.elements.GuiSolidLabelElement" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>