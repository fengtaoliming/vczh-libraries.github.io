<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.Value">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping>
        <Map From="::vl::reflection::description::Value::ValueType::Null" To="::vl::reflection::description::Value::ValueType" />
        <Map From="::vl::reflection::description::Value::ValueType::RawPtr" To="::vl::reflection::description::Value::ValueType" />
        <Map From="::vl::reflection::description::Value::ValueType::SharedPtr" To="::vl::reflection::description::Value::ValueType" />
        <Map From="::vl::reflection::description::Value::ValueType::BoxedValue" To="::vl::reflection::description::Value::ValueType" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value" DisplayName="Value class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::ValueType" DisplayName="ValueType enum" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::valueType" DisplayName="valueType field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::rawPtr" DisplayName="rawPtr field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::sharedPtr" DisplayName="sharedPtr field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::boxedValue" DisplayName="boxedValue field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::typeDescriptor" DisplayName="typeDescriptor field" Doc="false" />
        <Overloads DisplayName="Value constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Value(* DescriptableObject)" DisplayName="Value constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Value(Ptr&lt;DescriptableObject&gt;)" DisplayName="Value constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Value(Ptr&lt;IBoxedValue&gt;,* ITypeDescriptor)" DisplayName="Value constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Value()" DisplayName="Value constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Value(&amp; const Value)" DisplayName="Value constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Compare(&amp; const Value,&amp; const Value)const" DisplayName="Compare method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::operator =(&amp; const Value)" DisplayName="operator = method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::operator ==(&amp; const Value)const" DisplayName="operator == method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::operator !=(&amp; const Value)const" DisplayName="operator != method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::operator &lt;(&amp; const Value)const" DisplayName="operator &lt; method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::operator &lt;=(&amp; const Value)const" DisplayName="operator &lt;= method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::operator &gt;(&amp; const Value)const" DisplayName="operator &gt; method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::operator &gt;=(&amp; const Value)const" DisplayName="operator &gt;= method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::GetValueType()const" DisplayName="GetValueType method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::GetRawPtr()const" DisplayName="GetRawPtr method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::GetSharedPtr()const" DisplayName="GetSharedPtr method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::GetBoxedValue()const" DisplayName="GetBoxedValue method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::GetTypeDescriptor()const" DisplayName="GetTypeDescriptor method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::GetTypeFriendlyName()const" DisplayName="GetTypeFriendlyName method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::IsNull()const" DisplayName="IsNull method" Doc="false" />
        <Overloads DisplayName="CanConvertTo method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::CanConvertTo(* ITypeDescriptor,ValueType)const" DisplayName="CanConvertTo method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::CanConvertTo(* ITypeInfo)const" DisplayName="CanConvertTo method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="From method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::From(* DescriptableObject)" DisplayName="From method" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::From(Ptr&lt;DescriptableObject&gt;)" DisplayName="From method" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::From(Ptr&lt;IBoxedValue&gt;,* ITypeDescriptor)" DisplayName="From method" Doc="true" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::SelectMethod(* IMethodGroupInfo,&amp; collections::Array&lt;Value&gt;)" DisplayName="SelectMethod method" Doc="false" />
        <Overloads DisplayName="Create method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Create(* ITypeDescriptor)" DisplayName="Create method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Create(* ITypeDescriptor,&amp; collections::Array&lt;Value&gt;)" DisplayName="Create method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Create(&amp; const WString)" DisplayName="Create method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Create(&amp; const WString,&amp; collections::Array&lt;Value&gt;)" DisplayName="Create method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="InvokeStatic method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::InvokeStatic(&amp; const WString,&amp; const WString)" DisplayName="InvokeStatic method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::InvokeStatic(&amp; const WString,&amp; const WString,&amp; collections::Array&lt;Value&gt;)" DisplayName="InvokeStatic method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::GetProperty(&amp; const WString)const" DisplayName="GetProperty method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::SetProperty(&amp; const WString,&amp; const Value)" DisplayName="SetProperty method" Doc="false" />
        <Overloads DisplayName="Invoke method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Invoke(&amp; const WString)const" DisplayName="Invoke method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::Invoke(&amp; const WString,&amp; collections::Array&lt;Value&gt;)const" DisplayName="Invoke method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::AttachEvent(&amp; const WString,&amp; const Value)const" DisplayName="AttachEvent method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value::DeleteRawPtr()" DisplayName="DeleteRawPtr method" Doc="true" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>