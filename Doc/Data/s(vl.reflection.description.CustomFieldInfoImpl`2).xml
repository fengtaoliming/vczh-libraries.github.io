<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.CustomFieldInfoImpl`2">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TClass" Tags="x86, Windows" NameKey="::vl::reflection::description::TClass" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::TClass" />
        <TypeParameterDecl Access="Public" Name="TField" Tags="x86, Windows" NameKey="::vl::reflection::description::TField" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::TField" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="CustomFieldInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="fieldRef" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::fieldRef" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::fieldRef" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <ClassMemberTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TField" Name="TField">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::CustomFieldInfoImpl`2::TField@s:vl.reflection.description.CustomFieldInfoImpl`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <ClassType>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TClass" Name="TClass">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::CustomFieldInfoImpl`2::TClass@s:vl.reflection.description.CustomFieldInfoImpl`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ClassType>
                    </ClassMemberTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Protected" Name="GetValueInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::GetValueInternal" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::GetValueInternal(&amp; const Value)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::GetValueInternal::thisObject" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::GetValueInternal(&amp; const Value)::thisObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="SetValueInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::SetValueInternal" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::SetValueInternal(&amp; Value,&amp; const Value)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::SetValueInternal::thisObject" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::SetValueInternal(&amp; Value,&amp; const Value)::thisObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="newValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::SetValueInternal::newValue" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::SetValueInternal(&amp; Value,&amp; const Value)::newValue" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="CustomFieldInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::CustomFieldInfoImpl" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::CustomFieldInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(TField))" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_ownerTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::CustomFieldInfoImpl::_ownerTypeDescriptor" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::CustomFieldInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(TField))::_ownerTypeDescriptor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::CustomFieldInfoImpl::_name" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::CustomFieldInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(TField))::_name" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_fieldRef" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::CustomFieldInfoImpl::_fieldRef" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::CustomFieldInfoImpl(* ITypeDescriptor,&amp; const WString,* TClass::(TField))::_fieldRef" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <ClassMemberTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TField" Name="TField">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::CustomFieldInfoImpl`2::TField@s:vl.reflection.description.CustomFieldInfoImpl`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <ClassType>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TClass" Name="TClass">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::CustomFieldInfoImpl`2::TClass@s:vl.reflection.description.CustomFieldInfoImpl`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </ClassType>
                            </ClassMemberTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetCpp" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::CustomFieldInfoImpl::GetCpp" OverloadKey="::vl::reflection::description::CustomFieldInfoImpl`2::GetCpp()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo::ICpp" Name="ICpp">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IPropertyInfo::ICpp@s:vl.reflection.description.IPropertyInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::FieldInfoImpl" Name="FieldInfoImpl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::FieldInfoImpl@s:vl.reflection.description.FieldInfoImpl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>