<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.SetCodeRange(Ptr{WfType},parsing.ParsingTextRange)">
    <FuncDecl Access="Public" Name="SetCodeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfType&gt;,parsing::ParsingTextRange)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::node" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfType&gt;,parsing::ParsingTextRange)::node" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::codeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfType&gt;,parsing::ParsingTextRange)::codeRange" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.workflow.analyzer.SetCodeRange(Ptr{WfExpression},parsing.ParsingTextRange)">
    <FuncDecl Access="Public" Name="SetCodeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfExpression&gt;,parsing::ParsingTextRange)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::node" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfExpression&gt;,parsing::ParsingTextRange)::node" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::codeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfExpression&gt;,parsing::ParsingTextRange)::codeRange" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.workflow.analyzer.SetCodeRange(Ptr{WfStatement},parsing.ParsingTextRange)">
    <FuncDecl Access="Public" Name="SetCodeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfStatement&gt;,parsing::ParsingTextRange)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::node" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfStatement&gt;,parsing::ParsingTextRange)::node" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::codeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfStatement&gt;,parsing::ParsingTextRange)::codeRange" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.workflow.analyzer.SetCodeRange(Ptr{WfDeclaration},parsing.ParsingTextRange)">
    <FuncDecl Access="Public" Name="SetCodeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfDeclaration&gt;,parsing::ParsingTextRange)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::node" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfDeclaration&gt;,parsing::ParsingTextRange)::node" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::codeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfDeclaration&gt;,parsing::ParsingTextRange)::codeRange" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.workflow.analyzer.SetCodeRange(Ptr{WfModule},parsing.ParsingTextRange)">
    <FuncDecl Access="Public" Name="SetCodeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfModule&gt;,parsing::ParsingTextRange)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::node" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfModule&gt;,parsing::ParsingTextRange)::node" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SetCodeRange::codeRange" OverloadKey="::vl::workflow::analyzer::SetCodeRange(Ptr&lt;WfModule&gt;,parsing::ParsingTextRange)::codeRange" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>