<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.collections.Array`2">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Array.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;Type of elements.&lt;/typeparam&gt;
  &lt;typeparam name="K"&gt;Type of the key type of elements.&lt;/typeparam&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::T" OverloadKey="::vl::collections::Array`2::T" />
        <TypeParameterDecl Access="Public" Name="K" Tags="x86, Windows" NameKey="::vl::collections::K" OverloadKey="::vl::collections::Array`2::K" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="Array" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array" OverloadKey="::vl::collections::Array`2" ClassType="Class">
          <Children>
            <FuncDecl Access="Public" Name="Array" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Array" OverloadKey="::vl::collections::Array`2::Array(vint)" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create an array.&lt;/summary&gt;
  &lt;param name="size"&gt;The size of the array.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Array::size" OverloadKey="::vl::collections::Array`2::Array(vint)::size" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Array" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Array" OverloadKey="::vl::collections::Array`2::Array(* const T,vint)" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create an array.&lt;/summary&gt;
  &lt;param name="_buffer"&gt;Pointer to an array to copy.&lt;/param&gt;
  &lt;param name="size"&gt;The size of the array.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Array::_buffer" OverloadKey="::vl::collections::Array`2::Array(* const T,vint)::_buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Array`2::T@s:vl.collections.Array`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Array::size" OverloadKey="::vl::collections::Array`2::Array(* const T,vint)::size" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~Array" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::~Array" OverloadKey="::vl::collections::Array`2::~Array()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Contains" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Contains" OverloadKey="::vl::collections::Array`2::Contains(&amp; const K)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Test does the array contain an item or not.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the array contains the specified item.&lt;/returns&gt;
  &lt;param name="item"&gt;The item to test.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Contains::item" OverloadKey="::vl::collections::Array`2::Contains(&amp; const K)const::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::K" Name="K">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Array`2::K@s:vl.collections.Array`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="IndexOf" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::IndexOf" OverloadKey="::vl::collections::Array`2::IndexOf(&amp; const K)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get the position of an item in this array.&lt;/summary&gt;
  &lt;returns&gt;Returns the position. Returns -1 if not exists&lt;/returns&gt;
  &lt;param name="item"&gt;The item to find.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::IndexOf::item" OverloadKey="::vl::collections::Array`2::IndexOf(&amp; const K)const::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::K" Name="K">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Array`2::K@s:vl.collections.Array`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Set" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Set" OverloadKey="::vl::collections::Array`2::Set(vint,&amp; const T)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Replace an item.&lt;/summary&gt;
  &lt;param name="index"&gt;The position of the item.&lt;/param&gt;
  &lt;param name="item"&gt;The new item to put into the array.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Set::index" OverloadKey="::vl::collections::Array`2::Set(vint,&amp; const T)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Set::item" OverloadKey="::vl::collections::Array`2::Set(vint,&amp; const T)::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Array`2::T@s:vl.collections.Array`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator []" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::operator []" OverloadKey="::vl::collections::Array`2::operator [](vint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Array`2::T@s:vl.collections.Array`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::operator []::index" OverloadKey="::vl::collections::Array`2::operator [](vint)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Resize" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Resize" OverloadKey="::vl::collections::Array`2::Resize(vint)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Change the size of the array.&lt;/summary&gt;
  &lt;param name="size"&gt;The new size of the array.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Array::Resize::size" OverloadKey="::vl::collections::Array`2::Resize(vint)::size" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::ArrayBase" Name="ArrayBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::ArrayBase`1@s:vl.collections.ArrayBase`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Array`2::T@s:vl.collections.Array`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>