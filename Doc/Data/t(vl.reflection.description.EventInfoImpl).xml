<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.EventInfoImpl">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl" DisplayName="EventInfoImpl class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::ownerTypeDescriptor" DisplayName="ownerTypeDescriptor field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::observingProperties" DisplayName="observingProperties field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::name" DisplayName="name field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::handlerType" DisplayName="handlerType field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::AttachInternal(* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)" DisplayName="AttachInternal method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::DetachInternal(* DescriptableObject,Ptr&lt;IEventHandler&gt;)" DisplayName="DetachInternal method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::InvokeInternal(* DescriptableObject,Ptr&lt;IValueList&gt;)" DisplayName="InvokeInternal method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::GetHandlerTypeInternal()" DisplayName="GetHandlerTypeInternal method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::EventInfoImpl(* ITypeDescriptor,&amp; const WString)" DisplayName="EventInfoImpl constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::~EventInfoImpl()" DisplayName="~EventInfoImpl destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::GetOwnerTypeDescriptor()" DisplayName="GetOwnerTypeDescriptor method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::GetName()" DisplayName="GetName method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::GetHandlerType()" DisplayName="GetHandlerType method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::GetObservingPropertyCount()" DisplayName="GetObservingPropertyCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::GetObservingProperty(vint)" DisplayName="GetObservingProperty method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::Attach(&amp; const Value,Ptr&lt;IValueFunctionProxy&gt;)" DisplayName="Attach method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::Detach(&amp; const Value,Ptr&lt;IEventHandler&gt;)" DisplayName="Detach method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::EventInfoImpl::Invoke(&amp; const Value,Ptr&lt;IValueList&gt;)" DisplayName="Invoke method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>