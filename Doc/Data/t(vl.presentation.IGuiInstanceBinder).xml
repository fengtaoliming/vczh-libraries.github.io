<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.presentation.IGuiInstanceBinder">
    <SymbolTree NamespaceUrlName="vl.presentation">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::IGuiInstanceBinder" DisplayName="IGuiInstanceBinder class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::IGuiInstanceBinder::GetBindingName()" DisplayName="GetBindingName method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::IGuiInstanceBinder::ApplicableToConstructorArgument()" DisplayName="ApplicableToConstructorArgument method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::IGuiInstanceBinder::RequirePropertyExist()" DisplayName="RequirePropertyExist method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::IGuiInstanceBinder::GenerateConstructorArgument(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,* IGuiInstanceLoader,&amp; const IGuiInstanceLoader::PropertyInfo,Ptr&lt;GuiInstancePropertyInfo&gt;,&amp; const WString,GuiResourceTextPos,&amp; GuiResourceError::List)" DisplayName="GenerateConstructorArgument method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::IGuiInstanceBinder::GenerateInstallStatement(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,GlobalStringKey,* description::IPropertyInfo,* IGuiInstanceLoader,&amp; const IGuiInstanceLoader::PropertyInfo,Ptr&lt;GuiInstancePropertyInfo&gt;,&amp; const WString,GuiResourceTextPos,&amp; GuiResourceError::List)" DisplayName="GenerateInstallStatement method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>