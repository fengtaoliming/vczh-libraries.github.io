<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.EnumTypeDescriptor`2">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::EnumTypeDescriptor`2::T" />
        <TypeParameterDecl Access="Public" Name="TDFlags" Tags="x86, Windows" NameKey="::vl::reflection::description::TDFlags" OverloadKey="::vl::reflection::description::EnumTypeDescriptor`2::TDFlags" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="EnumTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EnumTypeDescriptor" OverloadKey="::vl::reflection::description::EnumTypeDescriptor`2" ClassType="Class">
          <Children>
            <TypedefDecl Access="Private" Name="TEnumType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EnumTypeDescriptor::TEnumType" OverloadKey="::vl::reflection::description::EnumTypeDescriptor`2::TEnumType">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::EnumType" Name="EnumType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::EnumType`2@s:vl.reflection.description.EnumType`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject::SafeAggregationCast`1(&amp; * T)::T@s:vl.reflection.DescriptableObject" />
                        <Key Value="::vl::reflection::DescriptableObject::SafeAggregationCast`1()::T@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <ConstantTypeDecl Value="TDFlags = = TypeDescriptorFlags : : FlagEnum" />
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Protected" Name="enumType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EnumTypeDescriptor::enumType" OverloadKey="::vl::reflection::description::EnumTypeDescriptor`2::enumType" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::EnumTypeDescriptor::TEnumType" Name="TEnumType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::EnumTypeDescriptor`2::TEnumType@s:vl.reflection.description.EnumTypeDescriptor`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Protected" Name="LoadInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EnumTypeDescriptor::LoadInternal" OverloadKey="::vl::reflection::description::EnumTypeDescriptor`2::LoadInternal()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypedValueTypeDescriptorBase" Name="TypedValueTypeDescriptorBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypedValueTypeDescriptorBase`2@s:vl.reflection.description.TypedValueTypeDescriptorBase`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::EnumTypeDescriptor`2::T@s:vl.reflection.description.EnumTypeDescriptor`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TDFlags" Name="TDFlags">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::EnumTypeDescriptor`2::TDFlags@s:vl.reflection.description.EnumTypeDescriptor`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>