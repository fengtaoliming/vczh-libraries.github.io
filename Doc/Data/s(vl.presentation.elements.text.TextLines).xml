<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.elements.text.TextLines">
    <ClassDecl Access="Public" Name="TextLines" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines" OverloadKey="::vl::presentation::elements::text::TextLines" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
A class to maintain multiple lines of text buffer.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="TextLineList" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::TextLineList" OverloadKey="::vl::presentation::elements::text::TextLines::TextLineList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLine" Name="TextLine">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="ownerElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::ownerElement" OverloadKey="::vl::presentation::elements::text::TextLines::ownerElement" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiColorizedTextElement" Name="GuiColorizedTextElement">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::GuiColorizedTextElement@s:vl.presentation.elements.GuiColorizedTextElement" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="lines" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::lines" OverloadKey="::vl::presentation::elements::text::TextLines::lines" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLines::TextLineList" Name="TextLineList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text::TextLines::TextLineList@s:vl.presentation.elements.text.TextLines" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="charMeasurer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::charMeasurer" OverloadKey="::vl::presentation::elements::text::TextLines::charMeasurer" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::CharMeasurer" Name="CharMeasurer">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text::CharMeasurer@s:vl.presentation.elements.text.CharMeasurer" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="renderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::renderTarget" OverloadKey="::vl::presentation::elements::text::TextLines::renderTarget" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" Name="IGuiGraphicsRenderTarget">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="tabWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::tabWidth" OverloadKey="::vl::presentation::elements::text::TextLines::tabWidth" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="tabSpaceCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::tabSpaceCount" OverloadKey="::vl::presentation::elements::text::TextLines::tabSpaceCount" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="passwordChar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::passwordChar" OverloadKey="::vl::presentation::elements::text::TextLines::passwordChar" Static="False">
          <Type>
            <RefTypeDecl Name="wchar_t" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="TextLines" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::TextLines" OverloadKey="::vl::presentation::elements::text::TextLines::TextLines(* GuiColorizedTextElement)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_ownerElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::TextLines::_ownerElement" OverloadKey="::vl::presentation::elements::text::TextLines::TextLines(* GuiColorizedTextElement)::_ownerElement" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiColorizedTextElement" Name="GuiColorizedTextElement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::GuiColorizedTextElement@s:vl.presentation.elements.GuiColorizedTextElement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~TextLines" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::~TextLines" OverloadKey="::vl::presentation::elements::text::TextLines::~TextLines()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetCount" OverloadKey="::vl::presentation::elements::text::TextLines::GetCount()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the number of text lines.
&lt;/summary&gt;
  &lt;returns&gt;The number of text lines.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetLine" OverloadKey="::vl::presentation::elements::text::TextLines::GetLine(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the text line of a specified row number.
&lt;/summary&gt;
  &lt;returns&gt;The related text line object.&lt;/returns&gt;
  &lt;param name="row"&gt;The specified row number.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLine" Name="TextLine">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="row" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetLine::row" OverloadKey="::vl::presentation::elements::text::TextLines::GetLine(vint)::row" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCharMeasurer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetCharMeasurer" OverloadKey="::vl::presentation::elements::text::TextLines::GetCharMeasurer()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the binded &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::CharMeasurer@s:vl.presentation.elements.text.CharMeasurer" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
  &lt;returns&gt;The binded &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::CharMeasurer@s:vl.presentation.elements.text.CharMeasurer" /&gt;&lt;/links&gt;.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::CharMeasurer" Name="CharMeasurer">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::text::CharMeasurer@s:vl.presentation.elements.text.CharMeasurer" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetCharMeasurer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetCharMeasurer" OverloadKey="::vl::presentation::elements::text::TextLines::SetCharMeasurer(* CharMeasurer)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Binded a &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::CharMeasurer@s:vl.presentation.elements.text.CharMeasurer" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
  &lt;param name="value"&gt;The &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::CharMeasurer@s:vl.presentation.elements.text.CharMeasurer" /&gt;&lt;/links&gt; to bind.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetCharMeasurer::value" OverloadKey="::vl::presentation::elements::text::TextLines::SetCharMeasurer(* CharMeasurer)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::CharMeasurer" Name="CharMeasurer">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::text::CharMeasurer@s:vl.presentation.elements.text.CharMeasurer" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRenderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetRenderTarget" OverloadKey="::vl::presentation::elements::text::TextLines::GetRenderTarget()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the binded &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
  &lt;returns&gt;The binded &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" /&gt;&lt;/links&gt;.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" Name="IGuiGraphicsRenderTarget">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetRenderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetRenderTarget" OverloadKey="::vl::presentation::elements::text::TextLines::SetRenderTarget(* IGuiGraphicsRenderTarget)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Binded a &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
  &lt;param name="value"&gt;The &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" /&gt;&lt;/links&gt; to bind.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetRenderTarget::value" OverloadKey="::vl::presentation::elements::text::TextLines::SetRenderTarget(* IGuiGraphicsRenderTarget)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" Name="IGuiGraphicsRenderTarget">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetText" OverloadKey="::vl::presentation::elements::text::TextLines::GetText(TextPos,TextPos)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns a string from a specified range of the text lines.
&lt;/summary&gt;
  &lt;returns&gt;The string.&lt;/returns&gt;
  &lt;param name="start"&gt;The start position.&lt;/param&gt;
  &lt;param name="end"&gt;The end position.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetText::start" OverloadKey="::vl::presentation::elements::text::TextLines::GetText(TextPos,TextPos)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="end" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetText::end" OverloadKey="::vl::presentation::elements::text::TextLines::GetText(TextPos,TextPos)::end" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetText" OverloadKey="::vl::presentation::elements::text::TextLines::GetText()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the whole string in the text lines.
&lt;/summary&gt;
  &lt;returns&gt;The string.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetText" OverloadKey="::vl::presentation::elements::text::TextLines::SetText(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the string to the text lines. This operation will modified every &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" /&gt;&lt;/links&gt; objects.
&lt;/summary&gt;
  &lt;param name="value"&gt;The string to set into the text lines.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetText::value" OverloadKey="::vl::presentation::elements::text::TextLines::SetText(&amp; const WString)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RemoveLines" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::RemoveLines" OverloadKey="::vl::presentation::elements::text::TextLines::RemoveLines(vint,vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Remove text lines in a specified range.
&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="start"&gt;The first row number.&lt;/param&gt;
  &lt;param name="count"&gt;The number of text lines to be removed.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::RemoveLines::start" OverloadKey="::vl::presentation::elements::text::TextLines::RemoveLines(vint,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::RemoveLines::count" OverloadKey="::vl::presentation::elements::text::TextLines::RemoveLines(vint,vint)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsAvailable" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::IsAvailable" OverloadKey="::vl::presentation::elements::text::TextLines::IsAvailable(TextPos)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Test is a text position available in the text lines.
&lt;/summary&gt;
  &lt;returns&gt;Returns true if this position is available.&lt;/returns&gt;
  &lt;param name="pos"&gt;The text position to test.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::IsAvailable::pos" OverloadKey="::vl::presentation::elements::text::TextLines::IsAvailable(TextPos)::pos" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Normalize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Normalize" OverloadKey="::vl::presentation::elements::text::TextLines::Normalize(TextPos)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Normalize a text position to be available.
&lt;/summary&gt;
  &lt;returns&gt;The normalized text position.&lt;/returns&gt;
  &lt;param name="pos"&gt;The text position to normalize.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Normalize::pos" OverloadKey="::vl::presentation::elements::text::TextLines::Normalize(TextPos)::pos" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Modify" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* * const wchar_t,* vint,vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Modify some text lines by replacing characters.
&lt;/summary&gt;
  &lt;returns&gt;The new end position.&lt;/returns&gt;
  &lt;param name="start"&gt;The start position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="end"&gt;The end position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="inputs"&gt;The buffer to the string buffers to replace into the text lines.&lt;/param&gt;
  &lt;param name="inputCounts"&gt;The numbers of characters for each string buffer.&lt;/param&gt;
  &lt;param name="rows"&gt;The number of string buffers.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::start" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* * const wchar_t,* vint,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="end" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::end" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* * const wchar_t,* vint,vint)::end" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="inputs" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::inputs" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* * const wchar_t,* vint,vint)::inputs" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl Name="wchar_t" />
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="inputCounts" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::inputCounts" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* * const wchar_t,* vint,vint)::inputCounts" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="rows" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::rows" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* * const wchar_t,* vint,vint)::rows" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Modify" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t,vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Modify some text lines by replacing characters.
&lt;/summary&gt;
  &lt;returns&gt;The new end position.&lt;/returns&gt;
  &lt;param name="start"&gt;The start position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="end"&gt;The end position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="input"&gt;The buffer to the string to replace into the text lines.&lt;/param&gt;
  &lt;param name="inputCount"&gt;The number of characters to replace into the text lines.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::start" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="end" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::end" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t,vint)::end" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::input" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t,vint)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="inputCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::inputCount" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t,vint)::inputCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Modify" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Modify some text lines by replacing characters.
&lt;/summary&gt;
  &lt;returns&gt;The new end position.&lt;/returns&gt;
  &lt;param name="start"&gt;The start position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="end"&gt;The end position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="input"&gt;The string to replace into the text lines.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::start" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="end" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::end" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t)::end" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::input" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,* const wchar_t)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Modify" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Modify some text lines by replacing characters.
&lt;/summary&gt;
  &lt;returns&gt;The new end position.&lt;/returns&gt;
  &lt;param name="start"&gt;The start position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="end"&gt;The end position of the range of characters to be replaced.&lt;/param&gt;
  &lt;param name="input"&gt;The string to replace into the text lines.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::start" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,&amp; const WString)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="end" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::end" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,&amp; const WString)::end" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Modify::input" OverloadKey="::vl::presentation::elements::text::TextLines::Modify(TextPos,TextPos,&amp; const WString)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Clear" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::Clear" OverloadKey="::vl::presentation::elements::text::TextLines::Clear()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Remove every text lines.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ClearMeasurement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::ClearMeasurement" OverloadKey="::vl::presentation::elements::text::TextLines::ClearMeasurement()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Clear all cached &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::CharAtt::rightOffset@s:vl.presentation.elements.text.CharAtt" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTabSpaceCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetTabSpaceCount" OverloadKey="::vl::presentation::elements::text::TextLines::GetTabSpaceCount()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the number of spaces to replace a tab character for rendering.
&lt;/summary&gt;
  &lt;returns&gt;The number of spaces to replace a tab character for rendering.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetTabSpaceCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetTabSpaceCount" OverloadKey="::vl::presentation::elements::text::TextLines::SetTabSpaceCount(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the number of spaces to replace a tab character for rendering.
&lt;/summary&gt;
  &lt;param name="value"&gt;The number of spaces to replace a tab character for rendering.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetTabSpaceCount::value" OverloadKey="::vl::presentation::elements::text::TextLines::SetTabSpaceCount(vint)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MeasureRow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::MeasureRow" OverloadKey="::vl::presentation::elements::text::TextLines::MeasureRow(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Measure all characters in a specified row.
&lt;/summary&gt;
  &lt;param name="row"&gt;The specified row number.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="row" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::MeasureRow::row" OverloadKey="::vl::presentation::elements::text::TextLines::MeasureRow(vint)::row" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRowWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetRowWidth" OverloadKey="::vl::presentation::elements::text::TextLines::GetRowWidth(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the width of a specified row.
&lt;/summary&gt;
  &lt;returns&gt;The width of a specified row, in pixel.&lt;/returns&gt;
  &lt;param name="row"&gt;The specified row number.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="row" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetRowWidth::row" OverloadKey="::vl::presentation::elements::text::TextLines::GetRowWidth(vint)::row" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRowHeight" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetRowHeight" OverloadKey="::vl::presentation::elements::text::TextLines::GetRowHeight()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the height of a row.
&lt;/summary&gt;
  &lt;returns&gt;The height of a row, in pixel.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMaxWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetMaxWidth" OverloadKey="::vl::presentation::elements::text::TextLines::GetMaxWidth()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the total width of the text lines.
&lt;/summary&gt;
  &lt;returns&gt;The width of the text lines, in pixel.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMaxHeight" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetMaxHeight" OverloadKey="::vl::presentation::elements::text::TextLines::GetMaxHeight()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Returns the total height of the text lines.
&lt;/summary&gt;
  &lt;returns&gt;The height of the text lines, in pixel.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTextPosFromPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetTextPosFromPoint" OverloadKey="::vl::presentation::elements::text::TextLines::GetTextPosFromPoint(Point)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the text position near to specified point.
&lt;/summary&gt;
  &lt;returns&gt;The text position.&lt;/returns&gt;
  &lt;param name="point"&gt;The specified point, in pixel.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="point" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetTextPosFromPoint::point" OverloadKey="::vl::presentation::elements::text::TextLines::GetTextPosFromPoint(Point)::point" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPointFromTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetPointFromTextPos" OverloadKey="::vl::presentation::elements::text::TextLines::GetPointFromTextPos(TextPos)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the point of a specified text position.
&lt;/summary&gt;
  &lt;returns&gt;The point, in pixel. Returns (-1, -1) if the text position is not available.&lt;/returns&gt;
  &lt;param name="pos"&gt;The specified text position.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetPointFromTextPos::pos" OverloadKey="::vl::presentation::elements::text::TextLines::GetPointFromTextPos(TextPos)::pos" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRectFromTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetRectFromTextPos" OverloadKey="::vl::presentation::elements::text::TextLines::GetRectFromTextPos(TextPos)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the bounds of a specified text position.
&lt;/summary&gt;
  &lt;returns&gt;The bounds, in pixel. Returns (-1, -1, -1, -1) if the text position is not available.&lt;/returns&gt;
  &lt;param name="pos"&gt;The specified text position.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetRectFromTextPos::pos" OverloadKey="::vl::presentation::elements::text::TextLines::GetRectFromTextPos(TextPos)::pos" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPasswordChar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::GetPasswordChar" OverloadKey="::vl::presentation::elements::text::TextLines::GetPasswordChar()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Get the password mode displaying character.
&lt;/summary&gt;
  &lt;returns&gt;The password mode displaying character. Returns L'\0' means the password mode is not activated.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="wchar_t" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetPasswordChar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetPasswordChar" OverloadKey="::vl::presentation::elements::text::TextLines::SetPasswordChar(wchar_t)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set the password mode displaying character.
&lt;/summary&gt;
  &lt;param name="value"&gt;The password mode displaying character. Set to L'\0' to deactivate the password mode.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLines::SetPasswordChar::value" OverloadKey="::vl::presentation::elements::text::TextLines::SetPasswordChar(wchar_t)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLines" Name="TextLines">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text::TextLines@s:vl.presentation.elements.text.TextLines" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>