<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.typeimpl.WfEvent">
    <ClassDecl Access="Public" Name="WfEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent" OverloadKey="::vl::workflow::typeimpl::WfEvent" ClassType="Class">
      <Children>
        <TypedefDecl Access="Private" Name="ITypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::ITypeDescriptor" OverloadKey="::vl::workflow::typeimpl::WfEvent::ITypeDescriptor">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ITypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::ITypeInfo" OverloadKey="::vl::workflow::typeimpl::WfEvent::ITypeInfo">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="IEventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::IEventHandler" OverloadKey="::vl::workflow::typeimpl::WfEvent::IEventHandler">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="IValueFunctionProxy" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy" OverloadKey="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IValueFunctionProxy" Name="IValueFunctionProxy">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IValueFunctionProxy@s:vl.reflection.description.IValueFunctionProxy" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="IValueList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::IValueList" OverloadKey="::vl::workflow::typeimpl::WfEvent::IValueList">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IValueList" Name="IValueList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IValueList@s:vl.reflection.description.IValueList" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="Value" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::Value" OverloadKey="::vl::workflow::typeimpl::WfEvent::Value">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <ClassDecl Access="Private" Name="EventHandlerImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl" ClassType="Class">
          <Children>
            <VarDecl Access="Public" Name="isAttached" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::isAttached" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::isAttached" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="proxy" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::proxy" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::proxy" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy" Name="IValueFunctionProxy">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy@s:vl.workflow.typeimpl.WfEvent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="EventHandlerImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::EventHandlerImpl" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::EventHandlerImpl(Ptr&lt;IValueFunctionProxy&gt;)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_proxy" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::EventHandlerImpl::_proxy" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::EventHandlerImpl(Ptr&lt;IValueFunctionProxy&gt;)::_proxy" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy" Name="IValueFunctionProxy">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy@s:vl.workflow.typeimpl.WfEvent" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="IsAttached" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::IsAttached" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl::IsAttached()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::IEventHandler" Name="IEventHandler">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::typeimpl::WfEvent::IEventHandler@s:vl.workflow.typeimpl.WfEvent" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <TypedefDecl Access="Private" Name="EventHandlerGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerGroup" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventHandlerGroup">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent" Name="WfEvent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfEvent@s:vl.workflow.typeimpl.WfEvent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl" Name="EventHandlerImpl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfEvent::EventHandlerImpl@s:vl.workflow.typeimpl.WfEvent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <ClassDecl Access="Private" Name="EventRecord" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventRecord" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventRecord" ClassType="Class">
          <Children>
            <VarDecl Access="Public" Name="handlers" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventRecord::handlers" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventRecord::handlers" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::EventHandlerGroup" Name="EventHandlerGroup">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::typeimpl::WfEvent::EventHandlerGroup@s:vl.workflow.typeimpl.WfEvent" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <VarDecl Access="Private" Name="EventRecordInternalPropertyName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::EventRecordInternalPropertyName" OverloadKey="::vl::workflow::typeimpl::WfEvent::EventRecordInternalPropertyName" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="wchar_t" />
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GetEventRecord" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::GetEventRecord" OverloadKey="::vl::workflow::typeimpl::WfEvent::GetEventRecord(* DescriptableObject,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::EventRecord" Name="EventRecord">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfEvent::EventRecord@s:vl.workflow.typeimpl.WfEvent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::GetEventRecord::thisObject" OverloadKey="::vl::workflow::typeimpl::WfEvent::GetEventRecord(* DescriptableObject,bool)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="createIfNotExist" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::GetEventRecord::createIfNotExist" OverloadKey="::vl::workflow::typeimpl::WfEvent::GetEventRecord(* DescriptableObject,bool)::createIfNotExist" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="AttachInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::AttachInternal" OverloadKey="::vl::workflow::typeimpl::WfEvent::AttachInternal(* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::IEventHandler" Name="IEventHandler">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfEvent::IEventHandler@s:vl.workflow.typeimpl.WfEvent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::AttachInternal::thisObject" OverloadKey="::vl::workflow::typeimpl::WfEvent::AttachInternal(* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="handler" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::AttachInternal::handler" OverloadKey="::vl::workflow::typeimpl::WfEvent::AttachInternal(* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)::handler" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy" Name="IValueFunctionProxy">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl::WfEvent::IValueFunctionProxy@s:vl.workflow.typeimpl.WfEvent" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="DetachInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::DetachInternal" OverloadKey="::vl::workflow::typeimpl::WfEvent::DetachInternal(* DescriptableObject,Ptr&lt;IEventHandler&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::DetachInternal::thisObject" OverloadKey="::vl::workflow::typeimpl::WfEvent::DetachInternal(* DescriptableObject,Ptr&lt;IEventHandler&gt;)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="handler" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::DetachInternal::handler" OverloadKey="::vl::workflow::typeimpl::WfEvent::DetachInternal(* DescriptableObject,Ptr&lt;IEventHandler&gt;)::handler" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::IEventHandler" Name="IEventHandler">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl::WfEvent::IEventHandler@s:vl.workflow.typeimpl.WfEvent" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="InvokeInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::InvokeInternal" OverloadKey="::vl::workflow::typeimpl::WfEvent::InvokeInternal(* DescriptableObject,Ptr&lt;IValueList&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::InvokeInternal::thisObject" OverloadKey="::vl::workflow::typeimpl::WfEvent::InvokeInternal(* DescriptableObject,Ptr&lt;IValueList&gt;)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::InvokeInternal::arguments" OverloadKey="::vl::workflow::typeimpl::WfEvent::InvokeInternal(* DescriptableObject,Ptr&lt;IValueList&gt;)::arguments" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::IValueList" Name="IValueList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl::WfEvent::IValueList@s:vl.workflow.typeimpl.WfEvent" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GetHandlerTypeInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::GetHandlerTypeInternal" OverloadKey="::vl::workflow::typeimpl::WfEvent::GetHandlerTypeInternal()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::ITypeInfo" Name="ITypeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfEvent::ITypeInfo@s:vl.workflow.typeimpl.WfEvent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WfEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::WfEvent" OverloadKey="::vl::workflow::typeimpl::WfEvent::WfEvent(* ITypeDescriptor,&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="ownerTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::WfEvent::ownerTypeDescriptor" OverloadKey="::vl::workflow::typeimpl::WfEvent::WfEvent(* ITypeDescriptor,&amp; const WString)::ownerTypeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl::WfEvent::ITypeDescriptor@s:vl.workflow.typeimpl.WfEvent" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::WfEvent::name" OverloadKey="::vl::workflow::typeimpl::WfEvent::WfEvent(* ITypeDescriptor,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~WfEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::~WfEvent" OverloadKey="::vl::workflow::typeimpl::WfEvent::~WfEvent()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCpp" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::GetCpp" OverloadKey="::vl::workflow::typeimpl::WfEvent::GetCpp()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo::ICpp" Name="ICpp">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IEventInfo::ICpp@s:vl.reflection.description.IEventInfo" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetHandlerType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::SetHandlerType" OverloadKey="::vl::workflow::typeimpl::WfEvent::SetHandlerType(Ptr&lt;ITypeInfo&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="typeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::typeimpl::WfEvent::SetHandlerType::typeInfo" OverloadKey="::vl::workflow::typeimpl::WfEvent::SetHandlerType(Ptr&lt;ITypeInfo&gt;)::typeInfo" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfEvent::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl::WfEvent::ITypeInfo@s:vl.workflow.typeimpl.WfEvent" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::EventInfoImpl" Name="EventInfoImpl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::EventInfoImpl@s:vl.reflection.description.EventInfoImpl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>