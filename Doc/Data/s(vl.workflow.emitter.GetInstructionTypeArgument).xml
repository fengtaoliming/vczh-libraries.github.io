<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.emitter.GetInstructionTypeArgument(Ptr{reflection.description.ITypeInfo})">
    <FuncDecl Access="Public" Name="GetInstructionTypeArgument" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::GetInstructionTypeArgument" OverloadKey="::vl::workflow::emitter::GetInstructionTypeArgument(Ptr&lt;reflection::description::ITypeInfo&gt;)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfInsType" Name="WfInsType">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfInsType@s:vl.workflow.runtime.WfInsType" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime" Name="runtime">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime@ns:vl.workflow.runtime" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="expectedType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::GetInstructionTypeArgument::expectedType" OverloadKey="::vl::workflow::emitter::GetInstructionTypeArgument(Ptr&lt;reflection::description::ITypeInfo&gt;)::expectedType" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>