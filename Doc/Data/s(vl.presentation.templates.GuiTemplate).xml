<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.templates.GuiTemplate">
    <ClassDecl Access="Public" Name="GuiTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate" OverloadKey="::vl::presentation::templates::GuiTemplate" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Represents a user customizable template.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <ClassDecl Access="Public" Name="IFactory" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::IFactory" OverloadKey="::vl::presentation::templates::GuiTemplate::IFactory" ClassType="Class">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Factory interface for creating &lt;links&gt;&lt;link cref="::vl::presentation::templates::GuiTemplate@s:vl.presentation.templates.GuiTemplate" /&gt;&lt;/links&gt; instances.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <FuncDecl Access="Public" Name="CreateTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::IFactory::CreateTemplate" OverloadKey="::vl::presentation::templates::GuiTemplate::IFactory::CreateTemplate(&amp; const description::Value)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create a &lt;links&gt;&lt;link cref="::vl::presentation::templates::GuiTemplate@s:vl.presentation.templates.GuiTemplate" /&gt;&lt;/links&gt; instance.&lt;/summary&gt;
  &lt;returns&gt;The created template.&lt;/returns&gt;
  &lt;param name="viewModel"&gt;The view model for binding.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTemplate" Name="GuiTemplate">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::templates::GuiTemplate@s:vl.presentation.templates.GuiTemplate" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="viewModel" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::IFactory::CreateTemplate::viewModel" OverloadKey="::vl::presentation::templates::GuiTemplate::IFactory::CreateTemplate(&amp; const description::Value)::viewModel" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                        <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                        <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTemplate::IFactory" Name="IFactory">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::templates::GuiTemplate::IFactory@s:vl.presentation.templates.GuiTemplate" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <FuncDecl Access="Public" Name="GuiTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::GuiTemplate" OverloadKey="::vl::presentation::templates::GuiTemplate::GuiTemplate()" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a template.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::~GuiTemplate" OverloadKey="::vl::presentation::templates::GuiTemplate::~GuiTemplate()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Private" Name="Font_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::Font_" OverloadKey="::vl::presentation::templates::GuiTemplate::Font_" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::FontProperties" Name="FontProperties">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::FontProperties@s:vl.presentation.FontProperties" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GetFont" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::GetFont" OverloadKey="::vl::presentation::templates::GuiTemplate::GetFont()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::FontProperties" Name="FontProperties">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::FontProperties@s:vl.presentation.FontProperties" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetFont" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::SetFont" OverloadKey="::vl::presentation::templates::GuiTemplate::SetFont(&amp; const FontProperties)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::SetFont::value" OverloadKey="::vl::presentation::templates::GuiTemplate::SetFont(&amp; const FontProperties)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::FontProperties" Name="FontProperties">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::FontProperties@s:vl.presentation.FontProperties" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Public" Name="FontChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::FontChanged" OverloadKey="::vl::presentation::templates::GuiTemplate::FontChanged" Static="False">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="VisuallyEnabled_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::VisuallyEnabled_" OverloadKey="::vl::presentation::templates::GuiTemplate::VisuallyEnabled_" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GetVisuallyEnabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::GetVisuallyEnabled" OverloadKey="::vl::presentation::templates::GuiTemplate::GetVisuallyEnabled()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetVisuallyEnabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::SetVisuallyEnabled" OverloadKey="::vl::presentation::templates::GuiTemplate::SetVisuallyEnabled(&amp; const bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::SetVisuallyEnabled::value" OverloadKey="::vl::presentation::templates::GuiTemplate::SetVisuallyEnabled(&amp; const bool)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="bool" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Public" Name="VisuallyEnabledChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiTemplate::VisuallyEnabledChanged" OverloadKey="::vl::presentation::templates::GuiTemplate::VisuallyEnabledChanged" Static="False">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiBoundsComposition" Name="GuiBoundsComposition">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiBoundsComposition@s:vl.presentation.compositions.GuiBoundsComposition" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiInstanceRootObject" Name="GuiInstanceRootObject">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiInstanceRootObject@s:vl.presentation.controls.GuiInstanceRootObject" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTemplate" Name="GuiTemplate">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::templates::GuiTemplate@s:vl.presentation.templates.GuiTemplate" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>