<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.internal_helper.BoxedEventInvoker`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::reflection::description::internal_helper::TArgs" OverloadKey="::vl::reflection::description::internal_helper::BoxedEventInvoker`1::TArgs" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="BoxedEventInvoker" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedEventInvoker" OverloadKey="::vl::reflection::description::internal_helper::BoxedEventInvoker`1" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="Invoke" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedEventInvoker::Invoke" OverloadKey="::vl::reflection::description::internal_helper::BoxedEventInvoker`1::Invoke(&amp; Event&lt;function (... TArgs) : void&gt;,Ptr&lt;IValueList&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="eventObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedEventInvoker::Invoke::eventObject" OverloadKey="::vl::reflection::description::internal_helper::BoxedEventInvoker`1::Invoke(&amp; Event&lt;function (... TArgs) : void&gt;,Ptr&lt;IValueList&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::eventObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Event" Name="Event">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Event`1@s:vl.Event`1" />
                                    <Key Value="::vl::Event`1&lt;function (... TArgs) : void&gt;@s:vl.Event`1{function (... TArgs) # void}" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <FunctionTypeDecl CallingConvention="Default" Const="False">
                                  <ReturnType>
                                    <RefTypeDecl Name="void" />
                                  </ReturnType>
                                  <Parameters>
                                    <VarDecl Access="Public" Static="False">
                                      <Type>
                                        <VariadicArgumentTypeDecl>
                                          <Element>
                                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TArgs" Name="TArgs">
                                              <ReferencingOverloadKeys>
                                                <Key Value="::vl::reflection::description::internal_helper::BoxedEventInvoker`1::TArgs@s:vl.reflection.description.internal_helper.BoxedEventInvoker`1" />
                                              </ReferencingOverloadKeys>
                                            </RefTypeDecl>
                                          </Element>
                                        </VariadicArgumentTypeDecl>
                                      </Type>
                                    </VarDecl>
                                  </Parameters>
                                </FunctionTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedEventInvoker::Invoke::arguments" OverloadKey="::vl::reflection::description::internal_helper::BoxedEventInvoker`1::Invoke(&amp; Event&lt;function (... TArgs) : void&gt;,Ptr&lt;IValueList&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::arguments" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueList" Name="IValueList">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IValueList@s:vl.reflection.description.IValueList" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="args" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedEventInvoker::Invoke::args" OverloadKey="::vl::reflection::description::internal_helper::BoxedEventInvoker`1::Invoke(&amp; Event&lt;function (... TArgs) : void&gt;,Ptr&lt;IValueList&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::args" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <DecorateTypeDecl Decoration="RightRef">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::RemoveCVR::Type" Name="Type">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::RemoveCVR`1::Type@s:vl.RemoveCVR`1" />
                                    <Key Value="::vl::RemoveCVR`1&lt;&amp; T&gt;::Type@s:vl.RemoveCVR`1{&amp; T}" />
                                    <Key Value="::vl::RemoveCVR`1&lt;&amp;&amp; T&gt;::Type@s:vl.RemoveCVR`1{&amp;&amp; T}" />
                                    <Key Value="::vl::RemoveCVR`1&lt;const T&gt;::Type@s:vl.RemoveCVR`1{const T}" />
                                    <Key Value="::vl::RemoveCVR`1&lt;volatile T&gt;::Type@s:vl.RemoveCVR`1{volatile T}" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <GenericTypeDecl>
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::RemoveCVR" Name="RemoveCVR">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::RemoveCVR`1@s:vl.RemoveCVR`1" />
                                            <Key Value="::vl::RemoveCVR`1&lt;&amp; T&gt;@s:vl.RemoveCVR`1{&amp; T}" />
                                            <Key Value="::vl::RemoveCVR`1&lt;&amp;&amp; T&gt;@s:vl.RemoveCVR`1{&amp;&amp; T}" />
                                            <Key Value="::vl::RemoveCVR`1&lt;const T&gt;@s:vl.RemoveCVR`1{const T}" />
                                            <Key Value="::vl::RemoveCVR`1&lt;volatile T&gt;@s:vl.RemoveCVR`1{volatile T}" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                      <TypeArguments>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TArgs" Name="TArgs">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::internal_helper::BoxedEventInvoker`1::TArgs@s:vl.reflection.description.internal_helper.BoxedEventInvoker`1" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </TypeArguments>
                                    </GenericTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>