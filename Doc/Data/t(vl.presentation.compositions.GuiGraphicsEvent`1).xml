<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.presentation.compositions.GuiGraphicsEvent`1">
    <SymbolTree NamespaceUrlName="vl.presentation.compositions">
      <SymbolParentMapping>
        <Map From="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachMethod`2(* TClass,* TClass::(TMethod))::TClass" To="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachMethod`2(* TClass,* TClass::(TMethod))" />
        <Map From="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachMethod`2(* TClass,* TClass::(TMethod))::TMethod" To="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachMethod`2(* TClass,* TClass::(TMethod))" />
        <Map From="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachLambda`1(&amp; const TLambda)::TLambda" To="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachLambda`1(&amp; const TLambda)" />
        <Map From="::vl::presentation::compositions::GuiGraphicsEvent`1::T" To="::vl::presentation::compositions::GuiGraphicsEvent`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1" DisplayName="GuiGraphicsEvent class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::RawFunctionType" DisplayName="RawFunctionType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::FunctionType" DisplayName="FunctionType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::ArgumentType" DisplayName="ArgumentType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::FunctionHandler" DisplayName="FunctionHandler class" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::FunctionHandler::handler" DisplayName="handler field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::FunctionHandler::FunctionHandler(&amp; const FunctionType)" DisplayName="FunctionHandler constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::FunctionHandler::Execute(* GuiGraphicsComposition,&amp; T)" DisplayName="Execute method" Doc="false" />
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::HandlerNode" DisplayName="HandlerNode struct" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::HandlerNode::handler" DisplayName="handler field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::HandlerNode::next" DisplayName="next field" Doc="false" />
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::sender" DisplayName="sender field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::handlers" DisplayName="handlers field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::Attach(Ptr&lt;FunctionHandler&gt;)" DisplayName="Attach method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::GuiGraphicsEvent(* GuiGraphicsComposition)" DisplayName="GuiGraphicsEvent constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::~GuiGraphicsEvent()" DisplayName="~GuiGraphicsEvent destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::GetAssociatedComposition()" DisplayName="GetAssociatedComposition method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::SetAssociatedComposition(* GuiGraphicsComposition)" DisplayName="SetAssociatedComposition method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachMethod`2(* TClass,* TClass::(TMethod))" DisplayName="AttachMethod function" Doc="false" />
        <Overloads DisplayName="AttachFunction method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachFunction(* RawFunctionType)" DisplayName="AttachFunction method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachFunction(&amp; const FunctionType)" DisplayName="AttachFunction method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::AttachLambda`1(&amp; const TLambda)" DisplayName="AttachLambda function" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::Detach(Ptr&lt;IGuiGraphicsEventHandler&gt;)" DisplayName="Detach method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::ExecuteWithNewSender(&amp; T,* GuiGraphicsComposition)" DisplayName="ExecuteWithNewSender method" Doc="false" />
        <Overloads DisplayName="Execute method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::Execute(&amp; T)" DisplayName="Execute method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::compositions::GuiGraphicsEvent`1::Execute(&amp; const T)" DisplayName="Execute method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>