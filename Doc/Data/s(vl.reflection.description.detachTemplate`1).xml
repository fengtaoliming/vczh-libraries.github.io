<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.detachTemplate`1(L&quot;.vl.__vwsn.EventDetach($This-}GetEventReceiver()-}$Name, $Handler)&quot;,{false})">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::detachTemplate`1(L&quot;::vl::__vwsn::EventDetach($This-&gt;GetEventReceiver()-&gt;$Name, $Handler)&quot;,&lt;false&gt;)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="detachTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::detachTemplate" OverloadKey="::vl::reflection::description::detachTemplate`1(L&quot;::vl::__vwsn::EventDetach($This-&gt;GetEventReceiver()-&gt;$Name, $Handler)&quot;,&lt;false&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <ClassMemberTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::WString@s:vl.WString" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <ClassType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::GuiEventInfoImpl" Name="GuiEventInfoImpl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::GuiEventInfoImpl`1@s:vl.reflection.description.GuiEventInfoImpl`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::detachTemplate`1(L&quot;::vl::__vwsn::EventDetach($This-&gt;GetEventReceiver()-&gt;$Name, $Handler)&quot;,&lt;false&gt;)::T@s:vl.reflection.description.detachTemplate`1(L&quot;.vl.__vwsn.EventDetach($This-}GetEventReceiver()-}$Name, $Handler)&quot;,{false})" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ClassType>
                </ClassMemberTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::detachTemplate::" OverloadKey="::vl::reflection::description::detachTemplate`1(L&quot;::vl::__vwsn::EventDetach($This-&gt;GetEventReceiver()-&gt;$Name, $Handler)&quot;,&lt;false&gt;)::" Static="False">
                  <Type>
                    <RefTypeDecl Name="L&quot;::vl::__vwsn::EventDetach($This-&gt;GetEventReceiver()-&gt;$Name, $Handler)&quot;" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::detachTemplate::" OverloadKey="::vl::reflection::description::detachTemplate`1(L&quot;::vl::__vwsn::EventDetach($This-&gt;GetEventReceiver()-&gt;$Name, $Handler)&quot;,&lt;false&gt;)::" Static="False">
                  <Type>
                    <ConstantTypeDecl Value="false" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>