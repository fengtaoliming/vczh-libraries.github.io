<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.SearchOrderedName(^ WfLexicalScope,Ptr{WfExpression},&amp; collections.SortedList{vint})">
    <FuncDecl Access="Public" Name="SearchOrderedName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SearchOrderedName" OverloadKey="::vl::workflow::analyzer::SearchOrderedName(* WfLexicalScope,Ptr&lt;WfExpression&gt;,&amp; collections::SortedList&lt;vint&gt;)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SearchOrderedName::scope" OverloadKey="::vl::workflow::analyzer::SearchOrderedName(* WfLexicalScope,Ptr&lt;WfExpression&gt;,&amp; collections::SortedList&lt;vint&gt;)::scope" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="expression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SearchOrderedName::expression" OverloadKey="::vl::workflow::analyzer::SearchOrderedName(* WfLexicalScope,Ptr&lt;WfExpression&gt;,&amp; collections::SortedList&lt;vint&gt;)::expression" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="names" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::SearchOrderedName::names" OverloadKey="::vl::workflow::analyzer::SearchOrderedName(* WfLexicalScope,Ptr&lt;WfExpression&gt;,&amp; collections::SortedList&lt;vint&gt;)::names" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections@ns:vl.collections" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>