<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.collections.Array`2">
    <SymbolTree NamespaceUrlName="vl.collections">
      <SymbolParentMapping>
        <Map From="::vl::collections::Array`2::T" To="::vl::collections::Array`2" />
        <Map From="::vl::collections::Array`2::K" To="::vl::collections::Array`2" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2" DisplayName="Array class" Doc="true">
        <Overloads DisplayName="Array constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::Array(vint)" DisplayName="Array constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::Array(* const T,vint)" DisplayName="Array constructor" Doc="true" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::~Array()" DisplayName="~Array destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::Contains(&amp; const K)const" DisplayName="Contains method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::IndexOf(&amp; const K)const" DisplayName="IndexOf method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::Set(vint,&amp; const T)" DisplayName="Set method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::operator [](vint)" DisplayName="operator [] method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::Array`2::Resize(vint)" DisplayName="Resize method" Doc="true" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>