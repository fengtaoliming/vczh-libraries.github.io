<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.GenericTypeInfo">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo" DisplayName="GenericTypeInfo class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::genericArguments" DisplayName="genericArguments field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::GenericTypeInfo(Ptr&lt;ITypeInfo&gt;)" DisplayName="GenericTypeInfo constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::~GenericTypeInfo()" DisplayName="~GenericTypeInfo destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::GetDecorator()" DisplayName="GetDecorator method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::GetGenericArgumentCount()" DisplayName="GetGenericArgumentCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::GetGenericArgument(vint)" DisplayName="GetGenericArgument method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::GetTypeFriendlyName()" DisplayName="GetTypeFriendlyName method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::GenericTypeInfo::AddGenericArgument(Ptr&lt;ITypeInfo&gt;)" DisplayName="AddGenericArgument method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>