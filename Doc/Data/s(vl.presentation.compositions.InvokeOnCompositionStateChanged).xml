<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.compositions.InvokeOnCompositionStateChanged(^ compositions.GuiGraphicsComposition)">
    <FuncDecl Access="Public" Name="InvokeOnCompositionStateChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::InvokeOnCompositionStateChanged" OverloadKey="::vl::presentation::compositions::InvokeOnCompositionStateChanged(* compositions::GuiGraphicsComposition)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="composition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::InvokeOnCompositionStateChanged::composition" OverloadKey="::vl::presentation::compositions::InvokeOnCompositionStateChanged(* compositions::GuiGraphicsComposition)::composition" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>