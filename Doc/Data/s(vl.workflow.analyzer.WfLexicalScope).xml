<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.WfLexicalScope">
    <ClassDecl Access="Public" Name="WfLexicalScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope" OverloadKey="::vl::workflow::analyzer::WfLexicalScope" ClassType="Class">
      <Children>
        <TypedefDecl Access="Private" Name="TypeGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::TypeGroup" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::TypeGroup">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Public" Name="ownerManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::ownerManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::ownerManager" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="ownerNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::ownerNode" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::ownerNode" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="ownerNodeSource" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::ownerNodeSource" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::ownerNodeSource" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="functionConfig" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::functionConfig" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::functionConfig" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalFunctionConfig" Name="WfLexicalFunctionConfig">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalFunctionConfig@s:vl.workflow.analyzer.WfLexicalFunctionConfig" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="typeOfThisExpr" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::typeOfThisExpr" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::typeOfThisExpr" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="parentScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::parentScope" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::parentScope" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="symbols" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::symbols" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::symbols" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope::TypeGroup" Name="TypeGroup">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScope::TypeGroup@s:vl.workflow.analyzer.WfLexicalScope" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WfLexicalScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope(* WfLexicalScopeManager)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_ownerManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope::_ownerManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope(* WfLexicalScopeManager)::_ownerManager" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WfLexicalScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope(Ptr&lt;WfLexicalScope&gt;)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_parentScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope::_parentScope" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::WfLexicalScope(Ptr&lt;WfLexicalScope&gt;)::_parentScope" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~WfLexicalScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::~WfLexicalScope" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::~WfLexicalScope()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FindManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::FindManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::FindManager()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FindModule" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::FindModule" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::FindModule()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FindDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::FindDeclaration" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::FindDeclaration()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetFriendlyName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::GetFriendlyName" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::GetFriendlyName()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetOwnerClassMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScope::GetOwnerClassMember" OverloadKey="::vl::workflow::analyzer::WfLexicalScope::GetOwnerClassMember()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassMember" Name="WfClassMember">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfClassMember@s:vl.workflow.WfClassMember" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>