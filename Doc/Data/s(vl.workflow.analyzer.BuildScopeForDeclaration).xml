<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.BuildScopeForDeclaration(^ WfLexicalScopeManager,Ptr{WfLexicalScope},Ptr{WfDeclaration},^ parsing.ParsingTreeCustomBase)">
    <FuncDecl Access="Public" Name="BuildScopeForDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForDeclaration" OverloadKey="::vl::workflow::analyzer::BuildScopeForDeclaration(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;WfDeclaration&gt;,* parsing::ParsingTreeCustomBase)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForDeclaration::manager" OverloadKey="::vl::workflow::analyzer::BuildScopeForDeclaration(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;WfDeclaration&gt;,* parsing::ParsingTreeCustomBase)::manager" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="parentScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForDeclaration::parentScope" OverloadKey="::vl::workflow::analyzer::BuildScopeForDeclaration(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;WfDeclaration&gt;,* parsing::ParsingTreeCustomBase)::parentScope" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="declaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForDeclaration::declaration" OverloadKey="::vl::workflow::analyzer::BuildScopeForDeclaration(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;WfDeclaration&gt;,* parsing::ParsingTreeCustomBase)::declaration" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="source" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForDeclaration::source" OverloadKey="::vl::workflow::analyzer::BuildScopeForDeclaration(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;WfDeclaration&gt;,* parsing::ParsingTreeCustomBase)::source" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>