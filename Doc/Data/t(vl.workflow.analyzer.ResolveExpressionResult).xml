<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.workflow.analyzer.ResolveExpressionResult">
    <SymbolTree NamespaceUrlName="vl.workflow.analyzer">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult" DisplayName="ResolveExpressionResult struct" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::scopeName" DisplayName="scopeName field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::symbol" DisplayName="symbol field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::propertyInfo" DisplayName="propertyInfo field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::methodInfo" DisplayName="methodInfo field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::constructorInfo" DisplayName="constructorInfo field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::eventInfo" DisplayName="eventInfo field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::type" DisplayName="type field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::writableType" DisplayName="writableType field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::expectedType" DisplayName="expectedType field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::GetFriendlyName(bool)const" DisplayName="GetFriendlyName method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::ScopeName(Ptr&lt;WfLexicalScopeName&gt;)" DisplayName="ScopeName method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::ReadonlySymbol(Ptr&lt;WfLexicalSymbol&gt;)" DisplayName="ReadonlySymbol method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::Symbol(Ptr&lt;WfLexicalSymbol&gt;)" DisplayName="Symbol method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::ReadonlyType(Ptr&lt;reflection::description::ITypeInfo&gt;)" DisplayName="ReadonlyType method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::WritableType(Ptr&lt;reflection::description::ITypeInfo&gt;)" DisplayName="WritableType method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::Property(* reflection::description::IPropertyInfo)" DisplayName="Property method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::Method(* reflection::description::IMethodInfo)" DisplayName="Method method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::Constructor(* reflection::description::IMethodInfo)" DisplayName="Constructor method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::Event(* reflection::description::IEventInfo)" DisplayName="Event method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::operator ==(&amp; const ResolveExpressionResult)const" DisplayName="operator == method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::workflow::analyzer::ResolveExpressionResult::operator !=(&amp; const ResolveExpressionResult)const" DisplayName="operator != method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>