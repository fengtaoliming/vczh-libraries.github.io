<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.PrimitiveTypeDescriptor`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::PrimitiveTypeDescriptor`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="PrimitiveTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::PrimitiveTypeDescriptor" OverloadKey="::vl::reflection::description::PrimitiveTypeDescriptor`1" ClassType="Class">
          <Children>
            <FuncDecl Access="Protected" Name="LoadInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::PrimitiveTypeDescriptor::LoadInternal" OverloadKey="::vl::reflection::description::PrimitiveTypeDescriptor`1::LoadInternal()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypedValueTypeDescriptorBase" Name="TypedValueTypeDescriptorBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypedValueTypeDescriptorBase`2@s:vl.reflection.description.TypedValueTypeDescriptorBase`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::PrimitiveTypeDescriptor`1::T@s:vl.reflection.description.PrimitiveTypeDescriptor`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeDescriptorFlags::Primitive" Name="Primitive">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeDescriptorFlags::Primitive@s:vl.reflection.description.TypeDescriptorFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeDescriptorFlags" Name="TypeDescriptorFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeDescriptorFlags@s:vl.reflection.description.TypeDescriptorFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>